
AVRASM ver. 2.1.30  C:\Users\MHTrXz\Desktop\ATMEGA32\15 - A2D\Debug\List\A2D.asm Sat Jun 15 17:31:42 2024

C:\Users\MHTrXz\Desktop\ATMEGA32\15 - A2D\Debug\List\A2D.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\MHTrXz\Desktop\ATMEGA32\15 - A2D\Debug\List\A2D.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\MHTrXz\Desktop\ATMEGA32\15 - A2D\Debug\List\A2D.asm(1090): warning: Register r7 already defined by the .DEF directive
C:\Users\MHTrXz\Desktop\ATMEGA32\15 - A2D\Debug\List\A2D.asm(1091): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 24.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _no=R5
                 	.DEF __lcd_x=R4
                 	.DEF __lcd_y=R7
                 	.DEF __lcd_maxx=R6
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0047 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G102:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G102:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
C:\Users\MHTrXz\Desktop\ATMEGA32\15 - A2D\Debug\List\A2D.asm(1130): warning: .cseg .db misalignment - padding zero byte
000033 0000      	.DB  0x0
                 
                 _0x0:
000034 6425
C:\Users\MHTrXz\Desktop\ATMEGA32\15 - A2D\Debug\List\A2D.asm(1133): warning: .cseg .db misalignment - padding zero byte
000035 0000      	.DB  0x25,0x64,0x0
                 _0x2020003:
000036 c080      	.DB  0x80,0xC0
                 _0x2060060:
C:\Users\MHTrXz\Desktop\ATMEGA32\15 - A2D\Debug\List\A2D.asm(1137): warning: .cseg .db misalignment - padding zero byte
000037 0001      	.DB  0x1
                 _0x2060000:
000038 4e2d
000039 4e41
00003a 4900
00003b 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\MHTrXz\Desktop\ATMEGA32\15 - A2D\Debug\List\A2D.asm(1140): warning: .cseg .db misalignment - padding zero byte
00003c 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00003d 0001      	.DW  0x01
00003e 0005      	.DW  0x05
00003f 0066      	.DW  __REG_VARS*2
                 
000040 0002      	.DW  0x02
000041 0280      	.DW  __base_y_G101
000042 006c      	.DW  _0x2020003*2
                 
000043 0001      	.DW  0x01
000044 0284      	.DW  __seed_G103
000045 006e      	.DW  _0x2060060*2
                 
                 _0xFFFFFFFF:
000046 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000047 94f8      	CLI
000048 27ee      	CLR  R30
000049 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004a e0f1      	LDI  R31,1
00004b bffb      	OUT  GICR,R31
00004c bfeb      	OUT  GICR,R30
00004d bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004e e08d      	LDI  R24,(14-2)+1
00004f e0a2      	LDI  R26,2
000050 27bb      	CLR  R27
                 __CLEAR_REG:
000051 93ed      	ST   X+,R30
000052 958a      	DEC  R24
000053 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000054 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000055 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000056 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000057 93ed      	ST   X+,R30
000058 9701      	SBIW R24,1
000059 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005a e7ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005b e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005c 9185      	LPM  R24,Z+
00005d 9195      	LPM  R25,Z+
00005e 9700      	SBIW R24,0
00005f f061      	BREQ __GLOBAL_INI_END
000060 91a5      	LPM  R26,Z+
000061 91b5      	LPM  R27,Z+
000062 9005      	LPM  R0,Z+
000063 9015      	LPM  R1,Z+
000064 01bf      	MOVW R22,R30
000065 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000066 9005      	LPM  R0,Z+
000067 920d      	ST   X+,R0
000068 9701      	SBIW R24,1
000069 f7e1      	BRNE __GLOBAL_INI_LOOP
00006a 01fb      	MOVW R30,R22
00006b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006c e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006d bfed      	OUT  SPL,R30
00006e e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000070 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000071 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000072 940c 0074 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*
                 ; * A2D.c
                 ; *
                 ; * Created: 6/15/2024 5:02:12 PM
                 ; * Author: MHTrXz
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <math.h>
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;#define output PORTA
                 ;
                 ;char no = 0;
                 ;char str[32];
                 ;
                 ;void main(void)
                 ; 0000 0014 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0015 
                 ; 0000 0016 lcd_init(16);
000074 e1a0      	LDI  R26,LOW(16)
000075 940e 0102 	CALL _lcd_init
                 ; 0000 0017 lcd_clear();
000077 940e 00d0 	CALL _lcd_clear
                 ; 0000 0018 
                 ; 0000 0019 DDRA = 0xff;
000079 efef      	LDI  R30,LOW(255)
00007a bbea      	OUT  0x1A,R30
                 ; 0000 001A DDRD.0 = 0;
00007b 9888      	CBI  0x11,0
                 ; 0000 001B while (1)
                 _0x5:
                 ; 0000 001C     {
                 ; 0000 001D     // Please write your application code here
                 ; 0000 001E         output = no;
00007c ba5b      	OUT  0x1B,R5
                 ; 0000 001F         if(PIND.0 != 1){
00007d 9980      	SBIC 0x10,0
00007e c002      	RJMP _0x8
                 ; 0000 0020             no ++;
00007f 9453      	INC  R5
                 ; 0000 0021         } else {
000080 c01b      	RJMP _0x9
                 _0x8:
                 ; 0000 0022             sprintf(str, "%d", no);
000081 e6e0      	LDI  R30,LOW(_str)
000082 e0f2      	LDI  R31,HIGH(_str)
000083 93fa      	ST   -Y,R31
000084 93ea      	ST   -Y,R30
                +
000085 e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000086 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000087 93fa      	ST   -Y,R31
000088 93ea      	ST   -Y,R30
000089 2de5      	MOV  R30,R5
00008a 27ff      	CLR  R31
00008b 2766      	CLR  R22
00008c 2777      	CLR  R23
00008d 940e 0345 	CALL __PUTPARD1
00008f e084      	LDI  R24,4
000090 940e 02a4 	CALL _sprintf
000092 9628      	ADIW R28,8
                 ; 0000 0023             lcd_gotoxy(0, 0);
000093 e0e0      	LDI  R30,LOW(0)
000094 93ea      	ST   -Y,R30
000095 e0a0      	LDI  R26,LOW(0)
000096 940e 00c3 	CALL _lcd_gotoxy
                 ; 0000 0024             lcd_puts(str);
000098 e6a0      	LDI  R26,LOW(_str)
000099 e0b2      	LDI  R27,HIGH(_str)
00009a 940e 00f1 	CALL _lcd_puts
                 ; 0000 0025         }
                 _0x9:
                 ; 0000 0026         delay_ms(1);
00009c e0a1      	LDI  R26,LOW(1)
00009d e0b0      	LDI  R27,0
00009e 940e 032b 	CALL _delay_ms
                 ; 0000 0027     }
0000a0 cfdb      	RJMP _0x5
                 ; 0000 0028 }
                 _0xA:
0000a1 cfff      	RJMP _0xA
                 ; .FEND
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
0000a2 93aa      	ST   -Y,R26
0000a3 b3e5      	IN   R30,0x15
0000a4 70ef      	ANDI R30,LOW(0xF)
0000a5 2fae      	MOV  R26,R30
0000a6 81e8      	LD   R30,Y
0000a7 7fe0      	ANDI R30,LOW(0xF0)
0000a8 2bea      	OR   R30,R26
0000a9 bbe5      	OUT  0x15,R30
                +
0000aa e288     +LDI R24 , LOW ( 40 )
                +__DELAY_USB_LOOP :
0000ab 958a     +DEC R24
0000ac f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 40
0000ad 9aa9      	SBI  0x15,1
                +
0000ae e288     +LDI R24 , LOW ( 40 )
                +__DELAY_USB_LOOP :
0000af 958a     +DEC R24
0000b0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 40
0000b1 98a9      	CBI  0x15,1
                +
0000b2 e288     +LDI R24 , LOW ( 40 )
                +__DELAY_USB_LOOP :
0000b3 958a     +DEC R24
0000b4 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 40
0000b5 c078      	RJMP _0x20C0002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000b6 93aa      	ST   -Y,R26
0000b7 81a8      	LD   R26,Y
0000b8 dfe9      	RCALL __lcd_write_nibble_G101
0000b9 81e8          ld    r30,y
0000ba 95e2          swap  r30
0000bb 83e8          st    y,r30
0000bc 81a8      	LD   R26,Y
0000bd dfe4      	RCALL __lcd_write_nibble_G101
                +
0000be e28c     +LDI R24 , LOW ( 300 )
0000bf e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
0000c0 9701     +SBIW R24 , 1
0000c1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
0000c2 c06b      	RJMP _0x20C0002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000c3 93aa      	ST   -Y,R26
0000c4 81e8      	LD   R30,Y
0000c5 e0f0      	LDI  R31,0
0000c6 58e0      	SUBI R30,LOW(-__base_y_G101)
0000c7 4ffd      	SBCI R31,HIGH(-__base_y_G101)
0000c8 81e0      	LD   R30,Z
0000c9 81a9      	LDD  R26,Y+1
0000ca 0fae      	ADD  R26,R30
0000cb dfea      	RCALL __lcd_write_data
0000cc 8049      	LDD  R4,Y+1
0000cd 8078      	LDD  R7,Y+0
0000ce 9622      	ADIW R28,2
0000cf 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000d0 e0a2      	LDI  R26,LOW(2)
0000d1 940e 02f1 	CALL SUBOPT_0x0
0000d3 e0ac      	LDI  R26,LOW(12)
0000d4 dfe1      	RCALL __lcd_write_data
0000d5 e0a1      	LDI  R26,LOW(1)
0000d6 940e 02f1 	CALL SUBOPT_0x0
0000d8 e0e0      	LDI  R30,LOW(0)
0000d9 2e7e      	MOV  R7,R30
0000da 2e4e      	MOV  R4,R30
0000db 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0000dc 93aa      	ST   -Y,R26
0000dd 81a8      	LD   R26,Y
0000de 30aa      	CPI  R26,LOW(0xA)
0000df f011      	BREQ _0x2020005
0000e0 1446      	CP   R4,R6
0000e1 f048      	BRLO _0x2020004
                 _0x2020005:
0000e2 e0e0      	LDI  R30,LOW(0)
0000e3 93ea      	ST   -Y,R30
0000e4 9473      	INC  R7
0000e5 2da7      	MOV  R26,R7
0000e6 dfdc      	RCALL _lcd_gotoxy
0000e7 81a8      	LD   R26,Y
0000e8 30aa      	CPI  R26,LOW(0xA)
0000e9 f409      	BRNE _0x2020007
0000ea c043      	RJMP _0x20C0002
                 _0x2020007:
                 _0x2020004:
0000eb 9443      	INC  R4
0000ec 9aa8      	SBI  0x15,0
0000ed 81a8      	LD   R26,Y
0000ee dfc7      	RCALL __lcd_write_data
0000ef 98a8      	CBI  0x15,0
0000f0 c03d      	RJMP _0x20C0002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0000f1 93ba      	ST   -Y,R27
0000f2 93aa      	ST   -Y,R26
0000f3 931a      	ST   -Y,R17
                 _0x2020008:
0000f4 81a9      	LDD  R26,Y+1
0000f5 81ba      	LDD  R27,Y+1+1
0000f6 91ed      	LD   R30,X+
0000f7 83a9      	STD  Y+1,R26
0000f8 83ba      	STD  Y+1+1,R27
0000f9 2f1e      	MOV  R17,R30
0000fa 30e0      	CPI  R30,0
0000fb f019      	BREQ _0x202000A
0000fc 2fa1      	MOV  R26,R17
0000fd dfde      	RCALL _lcd_putchar
0000fe cff5      	RJMP _0x2020008
                 _0x202000A:
0000ff 8118      	LDD  R17,Y+0
000100 9623      	ADIW R28,3
000101 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000102 93aa      	ST   -Y,R26
000103 b3e4      	IN   R30,0x14
000104 6fe0      	ORI  R30,LOW(0xF0)
000105 bbe4      	OUT  0x14,R30
000106 9aa1      	SBI  0x14,1
000107 9aa0      	SBI  0x14,0
000108 9aa2      	SBI  0x14,2
000109 98a9      	CBI  0x15,1
00010a 98a8      	CBI  0x15,0
00010b 98aa      	CBI  0x15,2
00010c 8068      	LDD  R6,Y+0
00010d 81e8      	LD   R30,Y
00010e 58e0      	SUBI R30,-LOW(128)
                +
00010f 93e0 0282+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000111 81e8      	LD   R30,Y
000112 54e0      	SUBI R30,-LOW(192)
                +
000113 93e0 0283+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000115 e1a4      	LDI  R26,LOW(20)
000116 e0b0      	LDI  R27,0
000117 940e 032b 	CALL _delay_ms
000119 940e 02f7 	CALL SUBOPT_0x1
00011b 940e 02f7 	CALL SUBOPT_0x1
00011d 940e 02f7 	CALL SUBOPT_0x1
00011f e2a0      	LDI  R26,LOW(32)
000120 df81      	RCALL __lcd_write_nibble_G101
                +
000121 e588     +LDI R24 , LOW ( 600 )
000122 e092     +LDI R25 , HIGH ( 600 )
                +__DELAY_USW_LOOP :
000123 9701     +SBIW R24 , 1
000124 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 600
000125 e2a8      	LDI  R26,LOW(40)
000126 df8f      	RCALL __lcd_write_data
000127 e0a4      	LDI  R26,LOW(4)
000128 df8d      	RCALL __lcd_write_data
000129 e8a5      	LDI  R26,LOW(133)
00012a df8b      	RCALL __lcd_write_data
00012b e0a6      	LDI  R26,LOW(6)
00012c df89      	RCALL __lcd_write_data
00012d dfa2      	RCALL _lcd_clear
                 _0x20C0002:
00012e 9621      	ADIW R28,1
00012f 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G102:
                 ; .FSTART _put_buff_G102
000130 93ba      	ST   -Y,R27
000131 93aa      	ST   -Y,R26
000132 931a      	ST   -Y,R17
000133 930a      	ST   -Y,R16
000134 81aa      	LDD  R26,Y+2
000135 81bb      	LDD  R27,Y+2+1
000136 9612      	ADIW R26,2
000137 940e 033d 	CALL __GETW1P
000139 9730      	SBIW R30,0
00013a f159      	BREQ _0x2040010
00013b 81aa      	LDD  R26,Y+2
00013c 81bb      	LDD  R27,Y+2+1
00013d 9614      	ADIW R26,4
00013e 940e 033d 	CALL __GETW1P
000140 018f      	MOVW R16,R30
000141 9730      	SBIW R30,0
000142 f061      	BREQ _0x2040012
                +
000143 3002     +CPI R16 , LOW ( 2 )
000144 e0e0     +LDI R30 , HIGH ( 2 )
000145 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000146 f098      	BRLO _0x2040013
000147 01f8      	MOVW R30,R16
000148 9731      	SBIW R30,1
000149 018f      	MOVW R16,R30
                +
00014a 81aa     +LDD R26 , Y + 2
00014b 81bb     +LDD R27 , Y + 2 + 1
00014c 9614     +ADIW R26 , 4
00014d 93ed     +ST X + , R30
00014e 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2040012:
00014f 81aa      	LDD  R26,Y+2
000150 81bb      	LDD  R27,Y+2+1
000151 9612      	ADIW R26,2
000152 91ed      	LD   R30,X+
000153 91fd      	LD   R31,X+
000154 9631      	ADIW R30,1
000155 93fe      	ST   -X,R31
000156 93ee      	ST   -X,R30
000157 9731      	SBIW R30,1
000158 81ac      	LDD  R26,Y+4
000159 83a0      	STD  Z+0,R26
                 _0x2040013:
00015a 81aa      	LDD  R26,Y+2
00015b 81bb      	LDD  R27,Y+2+1
00015c 940e 033d 	CALL __GETW1P
00015e 23ff      	TST  R31
00015f f02a      	BRMI _0x2040014
000160 91ed      	LD   R30,X+
000161 91fd      	LD   R31,X+
000162 9631      	ADIW R30,1
000163 93fe      	ST   -X,R31
000164 93ee      	ST   -X,R30
                 _0x2040014:
000165 c006      	RJMP _0x2040015
                 _0x2040010:
000166 81aa      	LDD  R26,Y+2
000167 81bb      	LDD  R27,Y+2+1
000168 efef      	LDI  R30,LOW(65535)
000169 efff      	LDI  R31,HIGH(65535)
00016a 93ed      	ST   X+,R30
00016b 93fc      	ST   X,R31
                 _0x2040015:
00016c 8119      	LDD  R17,Y+1
00016d 8108      	LDD  R16,Y+0
00016e 9625      	ADIW R28,5
00016f 9508      	RET
                 ; .FEND
                 __print_G102:
                 ; .FSTART __print_G102
000170 93ba      	ST   -Y,R27
000171 93aa      	ST   -Y,R26
000172 9726      	SBIW R28,6
000173 940e 034a 	CALL __SAVELOCR6
000175 e010      	LDI  R17,0
000176 85ac      	LDD  R26,Y+12
000177 85bd      	LDD  R27,Y+12+1
000178 e0e0      	LDI  R30,LOW(0)
000179 e0f0      	LDI  R31,HIGH(0)
00017a 93ed      	ST   X+,R30
00017b 93fc      	ST   X,R31
                 _0x2040016:
00017c 89ea      	LDD  R30,Y+18
00017d 89fb      	LDD  R31,Y+18+1
00017e 9631      	ADIW R30,1
00017f 8bea      	STD  Y+18,R30
000180 8bfb      	STD  Y+18+1,R31
000181 9731      	SBIW R30,1
000182 91e4      	LPM  R30,Z
000183 2f2e      	MOV  R18,R30
000184 30e0      	CPI  R30,0
000185 f409      	BRNE PC+2
000186 c115      	RJMP _0x2040018
000187 2fe1      	MOV  R30,R17
000188 30e0      	CPI  R30,0
000189 f439      	BRNE _0x204001C
00018a 3225      	CPI  R18,37
00018b f411      	BRNE _0x204001D
00018c e011      	LDI  R17,LOW(1)
00018d c002      	RJMP _0x204001E
                 _0x204001D:
00018e 940e 02ff 	CALL SUBOPT_0x2
                 _0x204001E:
000190 c10a      	RJMP _0x204001B
                 _0x204001C:
000191 30e1      	CPI  R30,LOW(0x1)
000192 f4a9      	BRNE _0x204001F
000193 3225      	CPI  R18,37
000194 f419      	BRNE _0x2040020
000195 940e 02ff 	CALL SUBOPT_0x2
000197 c102      	RJMP _0x20400CC
                 _0x2040020:
000198 e012      	LDI  R17,LOW(2)
000199 e040      	LDI  R20,LOW(0)
00019a e000      	LDI  R16,LOW(0)
00019b 322d      	CPI  R18,45
00019c f411      	BRNE _0x2040021
00019d e001      	LDI  R16,LOW(1)
00019e c0fc      	RJMP _0x204001B
                 _0x2040021:
00019f 322b      	CPI  R18,43
0001a0 f411      	BRNE _0x2040022
0001a1 e24b      	LDI  R20,LOW(43)
0001a2 c0f8      	RJMP _0x204001B
                 _0x2040022:
0001a3 3220      	CPI  R18,32
0001a4 f411      	BRNE _0x2040023
0001a5 e240      	LDI  R20,LOW(32)
0001a6 c0f4      	RJMP _0x204001B
                 _0x2040023:
0001a7 c002      	RJMP _0x2040024
                 _0x204001F:
0001a8 30e2      	CPI  R30,LOW(0x2)
0001a9 f439      	BRNE _0x2040025
                 _0x2040024:
0001aa e050      	LDI  R21,LOW(0)
0001ab e013      	LDI  R17,LOW(3)
0001ac 3320      	CPI  R18,48
0001ad f411      	BRNE _0x2040026
0001ae 6800      	ORI  R16,LOW(128)
0001af c0eb      	RJMP _0x204001B
                 _0x2040026:
0001b0 c003      	RJMP _0x2040027
                 _0x2040025:
0001b1 30e3      	CPI  R30,LOW(0x3)
0001b2 f009      	BREQ PC+2
0001b3 c0e7      	RJMP _0x204001B
                 _0x2040027:
0001b4 3320      	CPI  R18,48
0001b5 f010      	BRLO _0x204002A
0001b6 332a      	CPI  R18,58
0001b7 f008      	BRLO _0x204002B
                 _0x204002A:
0001b8 c007      	RJMP _0x2040029
                 _0x204002B:
0001b9 e0aa      	LDI  R26,LOW(10)
0001ba 9f5a      	MUL  R21,R26
0001bb 2d50      	MOV  R21,R0
0001bc 2fe2      	MOV  R30,R18
0001bd 53e0      	SUBI R30,LOW(48)
0001be 0f5e      	ADD  R21,R30
0001bf c0db      	RJMP _0x204001B
                 _0x2040029:
0001c0 2fe2      	MOV  R30,R18
0001c1 36e3      	CPI  R30,LOW(0x63)
0001c2 f449      	BRNE _0x204002F
0001c3 940e 0306 	CALL SUBOPT_0x3
0001c5 89e8      	LDD  R30,Y+16
0001c6 89f9      	LDD  R31,Y+16+1
0001c7 81a4      	LDD  R26,Z+4
0001c8 93aa      	ST   -Y,R26
0001c9 940e 030c 	CALL SUBOPT_0x4
0001cb c0ce      	RJMP _0x2040030
                 _0x204002F:
0001cc 37e3      	CPI  R30,LOW(0x73)
0001cd f441      	BRNE _0x2040032
0001ce 940e 0306 	CALL SUBOPT_0x3
0001d0 940e 0312 	CALL SUBOPT_0x5
0001d2 940e 02d8 	CALL _strlen
0001d4 2f1e      	MOV  R17,R30
0001d5 c00a      	RJMP _0x2040033
                 _0x2040032:
0001d6 37e0      	CPI  R30,LOW(0x70)
0001d7 f461      	BRNE _0x2040035
0001d8 940e 0306 	CALL SUBOPT_0x3
0001da 940e 0312 	CALL SUBOPT_0x5
0001dc 940e 02e4 	CALL _strlenf
0001de 2f1e      	MOV  R17,R30
0001df 6008      	ORI  R16,LOW(8)
                 _0x2040033:
0001e0 6002      	ORI  R16,LOW(2)
0001e1 770f      	ANDI R16,LOW(127)
0001e2 e030      	LDI  R19,LOW(0)
0001e3 c034      	RJMP _0x2040036
                 _0x2040035:
0001e4 36e4      	CPI  R30,LOW(0x64)
0001e5 f011      	BREQ _0x2040039
0001e6 36e9      	CPI  R30,LOW(0x69)
0001e7 f411      	BRNE _0x204003A
                 _0x2040039:
0001e8 6004      	ORI  R16,LOW(4)
0001e9 c002      	RJMP _0x204003B
                 _0x204003A:
0001ea 37e5      	CPI  R30,LOW(0x75)
0001eb f431      	BRNE _0x204003C
                 _0x204003B:
0001ec e5e4      	LDI  R30,LOW(_tbl10_G102*2)
0001ed e0f0      	LDI  R31,HIGH(_tbl10_G102*2)
0001ee 83ee      	STD  Y+6,R30
0001ef 83ff      	STD  Y+6+1,R31
0001f0 e015      	LDI  R17,LOW(5)
0001f1 c00c      	RJMP _0x204003D
                 _0x204003C:
0001f2 35e8      	CPI  R30,LOW(0x58)
0001f3 f411      	BRNE _0x204003F
0001f4 6008      	ORI  R16,LOW(8)
0001f5 c003      	RJMP _0x2040040
                 _0x204003F:
0001f6 37e8      	CPI  R30,LOW(0x78)
0001f7 f009      	BREQ PC+2
0001f8 c0a1      	RJMP _0x2040071
                 _0x2040040:
0001f9 e5ee      	LDI  R30,LOW(_tbl16_G102*2)
0001fa e0f0      	LDI  R31,HIGH(_tbl16_G102*2)
0001fb 83ee      	STD  Y+6,R30
0001fc 83ff      	STD  Y+6+1,R31
0001fd e014      	LDI  R17,LOW(4)
                 _0x204003D:
0001fe ff02      	SBRS R16,2
0001ff c014      	RJMP _0x2040042
000200 940e 0306 	CALL SUBOPT_0x3
000202 940e 031c 	CALL SUBOPT_0x6
000204 85ab      	LDD  R26,Y+11
000205 23aa      	TST  R26
000206 f43a      	BRPL _0x2040043
000207 85ea      	LDD  R30,Y+10
000208 85fb      	LDD  R31,Y+10+1
000209 940e 0339 	CALL __ANEGW1
00020b 87ea      	STD  Y+10,R30
00020c 87fb      	STD  Y+10+1,R31
00020d e24d      	LDI  R20,LOW(45)
                 _0x2040043:
00020e 3040      	CPI  R20,0
00020f f011      	BREQ _0x2040044
000210 5f1f      	SUBI R17,-LOW(1)
000211 c001      	RJMP _0x2040045
                 _0x2040044:
000212 7f0b      	ANDI R16,LOW(251)
                 _0x2040045:
000213 c004      	RJMP _0x2040046
                 _0x2040042:
000214 940e 0306 	CALL SUBOPT_0x3
000216 940e 031c 	CALL SUBOPT_0x6
                 _0x2040046:
                 _0x2040036:
000218 fd00      	SBRC R16,0
000219 c011      	RJMP _0x2040047
                 _0x2040048:
00021a 1715      	CP   R17,R21
00021b f478      	BRSH _0x204004A
00021c ff07      	SBRS R16,7
00021d c008      	RJMP _0x204004B
00021e ff02      	SBRS R16,2
00021f c004      	RJMP _0x204004C
000220 7f0b      	ANDI R16,LOW(251)
000221 2f24      	MOV  R18,R20
000222 5011      	SUBI R17,LOW(1)
000223 c001      	RJMP _0x204004D
                 _0x204004C:
000224 e320      	LDI  R18,LOW(48)
                 _0x204004D:
000225 c001      	RJMP _0x204004E
                 _0x204004B:
000226 e220      	LDI  R18,LOW(32)
                 _0x204004E:
000227 940e 02ff 	CALL SUBOPT_0x2
000229 5051      	SUBI R21,LOW(1)
00022a cfef      	RJMP _0x2040048
                 _0x204004A:
                 _0x2040047:
00022b 2f31      	MOV  R19,R17
00022c ff01      	SBRS R16,1
00022d c017      	RJMP _0x204004F
                 _0x2040050:
00022e 3030      	CPI  R19,0
00022f f0a1      	BREQ _0x2040052
000230 ff03      	SBRS R16,3
000231 c006      	RJMP _0x2040053
000232 81ee      	LDD  R30,Y+6
000233 81ff      	LDD  R31,Y+6+1
000234 9125      	LPM  R18,Z+
000235 83ee      	STD  Y+6,R30
000236 83ff      	STD  Y+6+1,R31
000237 c005      	RJMP _0x2040054
                 _0x2040053:
000238 81ae      	LDD  R26,Y+6
000239 81bf      	LDD  R27,Y+6+1
00023a 912d      	LD   R18,X+
00023b 83ae      	STD  Y+6,R26
00023c 83bf      	STD  Y+6+1,R27
                 _0x2040054:
00023d 940e 02ff 	CALL SUBOPT_0x2
00023f 3050      	CPI  R21,0
000240 f009      	BREQ _0x2040055
000241 5051      	SUBI R21,LOW(1)
                 _0x2040055:
000242 5031      	SUBI R19,LOW(1)
000243 cfea      	RJMP _0x2040050
                 _0x2040052:
000244 c04b      	RJMP _0x2040056
                 _0x204004F:
                 _0x2040058:
000245 e320      	LDI  R18,LOW(48)
000246 81ee      	LDD  R30,Y+6
000247 81ff      	LDD  R31,Y+6+1
000248 940e 0341 	CALL __GETW1PF
00024a 87e8      	STD  Y+8,R30
00024b 87f9      	STD  Y+8+1,R31
00024c 81ee      	LDD  R30,Y+6
00024d 81ff      	LDD  R31,Y+6+1
00024e 9632      	ADIW R30,2
00024f 83ee      	STD  Y+6,R30
000250 83ff      	STD  Y+6+1,R31
                 _0x204005A:
000251 85e8      	LDD  R30,Y+8
000252 85f9      	LDD  R31,Y+8+1
000253 85aa      	LDD  R26,Y+10
000254 85bb      	LDD  R27,Y+10+1
000255 17ae      	CP   R26,R30
000256 07bf      	CPC  R27,R31
000257 f050      	BRLO _0x204005C
000258 5f2f      	SUBI R18,-LOW(1)
000259 85a8      	LDD  R26,Y+8
00025a 85b9      	LDD  R27,Y+8+1
00025b 85ea      	LDD  R30,Y+10
00025c 85fb      	LDD  R31,Y+10+1
00025d 1bea      	SUB  R30,R26
00025e 0bfb      	SBC  R31,R27
00025f 87ea      	STD  Y+10,R30
000260 87fb      	STD  Y+10+1,R31
000261 cfef      	RJMP _0x204005A
                 _0x204005C:
000262 332a      	CPI  R18,58
000263 f028      	BRLO _0x204005D
000264 ff03      	SBRS R16,3
000265 c002      	RJMP _0x204005E
000266 5f29      	SUBI R18,-LOW(7)
000267 c001      	RJMP _0x204005F
                 _0x204005E:
000268 5d29      	SUBI R18,-LOW(39)
                 _0x204005F:
                 _0x204005D:
000269 fd04      	SBRC R16,4
00026a c01a      	RJMP _0x2040061
00026b 3321      	CPI  R18,49
00026c f420      	BRSH _0x2040063
00026d 85a8      	LDD  R26,Y+8
00026e 85b9      	LDD  R27,Y+8+1
00026f 9711      	SBIW R26,1
000270 f409      	BRNE _0x2040062
                 _0x2040063:
000271 c009      	RJMP _0x20400CD
                 _0x2040062:
000272 1753      	CP   R21,R19
000273 f010      	BRLO _0x2040067
000274 ff00      	SBRS R16,0
000275 c001      	RJMP _0x2040068
                 _0x2040067:
000276 c013      	RJMP _0x2040066
                 _0x2040068:
000277 e220      	LDI  R18,LOW(32)
000278 ff07      	SBRS R16,7
000279 c00b      	RJMP _0x2040069
00027a e320      	LDI  R18,LOW(48)
                 _0x20400CD:
00027b 6100      	ORI  R16,LOW(16)
00027c ff02      	SBRS R16,2
00027d c007      	RJMP _0x204006A
00027e 7f0b      	ANDI R16,LOW(251)
00027f 934a      	ST   -Y,R20
000280 940e 030c 	CALL SUBOPT_0x4
000282 3050      	CPI  R21,0
000283 f009      	BREQ _0x204006B
000284 5051      	SUBI R21,LOW(1)
                 _0x204006B:
                 _0x204006A:
                 _0x2040069:
                 _0x2040061:
000285 940e 02ff 	CALL SUBOPT_0x2
000287 3050      	CPI  R21,0
000288 f009      	BREQ _0x204006C
000289 5051      	SUBI R21,LOW(1)
                 _0x204006C:
                 _0x2040066:
00028a 5031      	SUBI R19,LOW(1)
00028b 85a8      	LDD  R26,Y+8
00028c 85b9      	LDD  R27,Y+8+1
00028d 9712      	SBIW R26,2
00028e f008      	BRLO _0x2040059
00028f cfb5      	RJMP _0x2040058
                 _0x2040059:
                 _0x2040056:
000290 ff00      	SBRS R16,0
000291 c008      	RJMP _0x204006D
                 _0x204006E:
000292 3050      	CPI  R21,0
000293 f031      	BREQ _0x2040070
000294 5051      	SUBI R21,LOW(1)
000295 e2e0      	LDI  R30,LOW(32)
000296 93ea      	ST   -Y,R30
000297 940e 030c 	CALL SUBOPT_0x4
000299 cff8      	RJMP _0x204006E
                 _0x2040070:
                 _0x204006D:
                 _0x2040071:
                 _0x2040030:
                 _0x20400CC:
00029a e010      	LDI  R17,LOW(0)
                 _0x204001B:
00029b cee0      	RJMP _0x2040016
                 _0x2040018:
00029c 85ac      	LDD  R26,Y+12
00029d 85bd      	LDD  R27,Y+12+1
00029e 940e 033d 	CALL __GETW1P
0002a0 940e 0351 	CALL __LOADLOCR6
0002a2 9664      	ADIW R28,20
0002a3 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002a4 92ff      	PUSH R15
0002a5 2ef8      	MOV  R15,R24
0002a6 9726      	SBIW R28,6
0002a7 940e 034c 	CALL __SAVELOCR4
0002a9 940e 0324 	CALL SUBOPT_0x7
0002ab 9730      	SBIW R30,0
0002ac f419      	BRNE _0x2040072
0002ad efef      	LDI  R30,LOW(65535)
0002ae efff      	LDI  R31,HIGH(65535)
0002af c023      	RJMP _0x20C0001
                 _0x2040072:
0002b0 01de      	MOVW R26,R28
0002b1 9616      	ADIW R26,6
0002b2 940e 0335 	CALL __ADDW2R15
0002b4 018d      	MOVW R16,R26
0002b5 940e 0324 	CALL SUBOPT_0x7
0002b7 83ee      	STD  Y+6,R30
0002b8 83ff      	STD  Y+6+1,R31
0002b9 e0e0      	LDI  R30,LOW(0)
0002ba 87e8      	STD  Y+8,R30
0002bb 87e9      	STD  Y+8+1,R30
0002bc 01de      	MOVW R26,R28
0002bd 961a      	ADIW R26,10
0002be 940e 0335 	CALL __ADDW2R15
0002c0 940e 033d 	CALL __GETW1P
0002c2 93fa      	ST   -Y,R31
0002c3 93ea      	ST   -Y,R30
0002c4 931a      	ST   -Y,R17
0002c5 930a      	ST   -Y,R16
0002c6 e3e0      	LDI  R30,LOW(_put_buff_G102)
0002c7 e0f1      	LDI  R31,HIGH(_put_buff_G102)
0002c8 93fa      	ST   -Y,R31
0002c9 93ea      	ST   -Y,R30
0002ca 01de      	MOVW R26,R28
0002cb 961a      	ADIW R26,10
0002cc dea3      	RCALL __print_G102
0002cd 019f      	MOVW R18,R30
0002ce 81ae      	LDD  R26,Y+6
0002cf 81bf      	LDD  R27,Y+6+1
0002d0 e0e0      	LDI  R30,LOW(0)
0002d1 93ec      	ST   X,R30
0002d2 01f9      	MOVW R30,R18
                 _0x20C0001:
0002d3 940e 0353 	CALL __LOADLOCR4
0002d5 962a      	ADIW R28,10
0002d6 90ff      	POP  R15
0002d7 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002d8 93ba      	ST   -Y,R27
0002d9 93aa      	ST   -Y,R26
0002da 91a9          ld   r26,y+
0002db 91b9          ld   r27,y+
0002dc 27ee          clr  r30
0002dd 27ff          clr  r31
                 strlen0:
0002de 916d          ld   r22,x+
0002df 2366          tst  r22
0002e0 f011          breq strlen1
0002e1 9631          adiw r30,1
0002e2 cffb          rjmp strlen0
                 strlen1:
0002e3 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002e4 93ba      	ST   -Y,R27
0002e5 93aa      	ST   -Y,R26
0002e6 27aa          clr  r26
0002e7 27bb          clr  r27
0002e8 91e9          ld   r30,y+
0002e9 91f9          ld   r31,y+
                 strlenf0:
0002ea 9005      	lpm  r0,z+
0002eb 2000          tst  r0
0002ec f011          breq strlenf1
0002ed 9611          adiw r26,1
0002ee cffb          rjmp strlenf0
                 strlenf1:
0002ef 01fd          movw r30,r26
0002f0 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _str:
000260           	.BYTE 0x20
                 __base_y_G101:
000280           	.BYTE 0x4
                 __seed_G103:
000284           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0002f1 940e 00b6 	CALL __lcd_write_data
0002f3 e0a3      	LDI  R26,LOW(3)
0002f4 e0b0      	LDI  R27,0
0002f5 940c 032b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
0002f7 e3a0      	LDI  R26,LOW(48)
0002f8 940e 00a2 	CALL __lcd_write_nibble_G101
                +
0002fa e588     +LDI R24 , LOW ( 600 )
0002fb e092     +LDI R25 , HIGH ( 600 )
                +__DELAY_USW_LOOP :
0002fc 9701     +SBIW R24 , 1
0002fd f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 600
0002fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
0002ff 932a      	ST   -Y,R18
000300 85ad      	LDD  R26,Y+13
000301 85be      	LDD  R27,Y+13+1
000302 85ef      	LDD  R30,Y+15
000303 89f8      	LDD  R31,Y+15+1
000304 9509      	ICALL
000305 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000306 89e8      	LDD  R30,Y+16
000307 89f9      	LDD  R31,Y+16+1
000308 9734      	SBIW R30,4
000309 8be8      	STD  Y+16,R30
00030a 8bf9      	STD  Y+16+1,R31
00030b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
00030c 85ad      	LDD  R26,Y+13
00030d 85be      	LDD  R27,Y+13+1
00030e 85ef      	LDD  R30,Y+15
00030f 89f8      	LDD  R31,Y+15+1
000310 9509      	ICALL
000311 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
000312 89a8      	LDD  R26,Y+16
000313 89b9      	LDD  R27,Y+16+1
000314 9614      	ADIW R26,4
000315 940e 033d 	CALL __GETW1P
000317 83ee      	STD  Y+6,R30
000318 83ff      	STD  Y+6+1,R31
000319 81ae      	LDD  R26,Y+6
00031a 81bf      	LDD  R27,Y+6+1
00031b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
00031c 89a8      	LDD  R26,Y+16
00031d 89b9      	LDD  R27,Y+16+1
00031e 9614      	ADIW R26,4
00031f 940e 033d 	CALL __GETW1P
000321 87ea      	STD  Y+10,R30
000322 87fb      	STD  Y+10+1,R31
000323 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000324 01de      	MOVW R26,R28
000325 961c      	ADIW R26,12
000326 940e 0335 	CALL __ADDW2R15
000328 940e 033d 	CALL __GETW1P
00032a 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00032b 9610      	adiw r26,0
00032c f039      	breq __delay_ms1
                 __delay_ms0:
00032d 95a8      	wdr
                +
00032e e780     +LDI R24 , LOW ( 0x1770 )
00032f e197     +LDI R25 , HIGH ( 0x1770 )
                +__DELAY_USW_LOOP :
000330 9701     +SBIW R24 , 1
000331 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x1770
000332 9711      	sbiw r26,1
000333 f7c9      	brne __delay_ms0
                 __delay_ms1:
000334 9508      	ret
                 
                 __ADDW2R15:
000335 2400      	CLR  R0
000336 0daf      	ADD  R26,R15
000337 1db0      	ADC  R27,R0
000338 9508      	RET
                 
                 __ANEGW1:
000339 95f1      	NEG  R31
00033a 95e1      	NEG  R30
00033b 40f0      	SBCI R31,0
00033c 9508      	RET
                 
                 __GETW1P:
00033d 91ed      	LD   R30,X+
00033e 91fc      	LD   R31,X
00033f 9711      	SBIW R26,1
000340 9508      	RET
                 
                 __GETW1PF:
000341 9005      	LPM  R0,Z+
000342 91f4      	LPM  R31,Z
000343 2de0      	MOV  R30,R0
000344 9508      	RET
                 
                 __PUTPARD1:
000345 937a      	ST   -Y,R23
000346 936a      	ST   -Y,R22
000347 93fa      	ST   -Y,R31
000348 93ea      	ST   -Y,R30
000349 9508      	RET
                 
                 __SAVELOCR6:
00034a 935a      	ST   -Y,R21
                 __SAVELOCR5:
00034b 934a      	ST   -Y,R20
                 __SAVELOCR4:
00034c 933a      	ST   -Y,R19
                 __SAVELOCR3:
00034d 932a      	ST   -Y,R18
                 __SAVELOCR2:
00034e 931a      	ST   -Y,R17
00034f 930a      	ST   -Y,R16
000350 9508      	RET
                 
                 __LOADLOCR6:
000351 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000352 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000353 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000354 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000355 8119      	LDD  R17,Y+1
000356 8108      	LD   R16,Y
000357 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   3 r6 :   2 r7 :   4 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:   6 r23:   2 
r24:  23 r25:   6 r26:  98 r27:  38 r28:  14 r29:   1 r30: 149 r31:  58 
x  :  23 y  : 166 z  :  15 
Registers used: 26 out of 35 (74.3%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  24 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  53 
cbi   :   6 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  10 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  33 cpse  :   0 dec   :   4 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   3 jmp   :  23 ld    :  25 ldd   :  77 ldi   :  89 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  18 movw  :  14 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  10 pop   :   1 push  :   1 rcall :  14 ret   :  24 
reti  :   0 rjmp  :  61 rol   :   0 ror   :   0 sbc   :   1 sbci  :   2 
sbi   :   5 sbic  :   1 sbis  :   0 sbiw  :  20 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  59 std   :  31 sts   :   2 sub   :   1 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 53 out of 116 (45.7%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006b0   1654     58   1712   32768   5.2%
[.dseg] 0x000060 0x000288      0     40     40    2048   2.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 8 warnings
