;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.14 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 6/14/2024
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 2.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;// Declare your global variables here
;
;#define no_0 0b00111111 // 0
;#define no_1 0b00000110 // 1
;#define no_2 0b01011011 // 2
;#define no_3 0b01001111 // 3
;#define no_4 0b01100110 // 4
;#define no_5 0b01101101 // 5
;#define no_6 0b01111101 // 6
;#define no_7 0b00000111 // 7
;#define no_8 0b01111111 // 8
;#define no_9 0b01101111 // 9
;
;#define delay 10
;
;#define seg_1 PORTC.0 = 0
;#define seg_2 PORTC.1 = 0
;#define seg_3 PORTC.2 = 0
;#define seg_4 PORTC.3 = 0
;
;#define databus PORTA
;
;#define seg_off PORTC = 0xff
;
;void main(void)
; 0000 0033 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0034 // Declare your local variables here
; 0000 0035 
; 0000 0036 // Input/Output Ports initialization
; 0000 0037 // Port A initialization
; 0000 0038 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0039 DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 003A // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 003B PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 003C 
; 0000 003D // Port C initialization
; 0000 003E // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 003F DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0040 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0041 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0042 
; 0000 0043 seg_off;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0044 
; 0000 0045 while (1)
;PCODE: $00000018 VOL: 0
; 0000 0046       {
; 0000 0047       // Place your code here
; 0000 0048 
; 0000 0049             databus = no_0; // 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 004A             seg_1;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 004B             delay_ms(delay);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 004C             seg_off;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 004D 
; 0000 004E             databus = no_1; // 1
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 004F             seg_2;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0050             delay_ms(delay);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0051             seg_off;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0052 
; 0000 0053             databus = no_2; // 2
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0054             seg_3;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0055             delay_ms(delay);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0056             seg_off;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0057 
; 0000 0058             databus = no_3; // 3
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0059             seg_4;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 005A             delay_ms(delay);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 005B             seg_off;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 005C 
; 0000 005D             databus = no_4; // 4
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 005E             seg_1;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 005F             delay_ms(delay);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0060             seg_off;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0061 
; 0000 0062             databus = no_5; // 5
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0063             seg_2;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0064             delay_ms(delay);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0065             seg_off;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0066 
; 0000 0067             databus = no_6; // 6
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0068             seg_3;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0069             delay_ms(delay);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 006A             seg_off;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 006B 
; 0000 006C             databus = no_7; // 7
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 006D             seg_4;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 006E             delay_ms(delay);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 006F             seg_off;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0070 
; 0000 0071             databus = no_8; // 8
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0072             seg_1;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0073             delay_ms(delay);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0074             seg_off;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0075 
; 0000 0076             databus = no_9; // 9
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0077             seg_2;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0078             delay_ms(delay);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0079             seg_off;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 007A 
; 0000 007B             databus = no_0; // 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 007C             seg_3;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 007D             delay_ms(delay);
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 007E             seg_off;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 007F 
; 0000 0080             databus = no_1; // 1
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0081             seg_4;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0082             delay_ms(delay);
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0083             seg_off;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0084 
; 0000 0085             databus = no_2; // 2
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0086             seg_1;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0087             delay_ms(delay);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0088             seg_off;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0089 
; 0000 008A             databus = no_3; // 3
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 008B             seg_2;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 008C             delay_ms(delay);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 008D             seg_off;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 008E 
; 0000 008F             databus = no_4; // 4
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0090             seg_3;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0091             delay_ms(delay);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0092             seg_off;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0093 
; 0000 0094             databus = no_5; // 5
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0095             seg_4;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0096             delay_ms(delay);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0097             seg_off;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0098 
; 0000 0099             databus = no_6; // 6
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 009A             seg_1;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 009B             delay_ms(delay);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 009C             seg_off;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 009D 
; 0000 009E             databus = no_7; // 7
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 009F             seg_2;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 00A0             delay_ms(delay);
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00A1             seg_off;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00A2 
; 0000 00A3             databus = no_8; // 8
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 00A4             seg_3;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 00A5             delay_ms(delay);
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 00A6             seg_off;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 00A7 
; 0000 00A8             databus = no_9; // 9
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 00A9             seg_4;
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 00AA             delay_ms(delay);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 00AB             seg_off;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 00AC       }
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00AD }
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
