
AVRASM ver. 2.1.30  C:\Users\MHTrXz\Desktop\ATMEGA32\14 - D2A\Debug\List\D2A.asm Sat Jun 15 16:02:34 2024

                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 24.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: Off
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0034 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x2020060:
C:\Users\MHTrXz\Desktop\ATMEGA32\14 - D2A\Debug\List\D2A.asm(1117): warning: .cseg .db misalignment - padding zero byte
00002a 0001      	.DB  0x1
                 _0x2020000:
00002b 4e2d
00002c 4e41
00002d 4900
00002e 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\MHTrXz\Desktop\ATMEGA32\14 - D2A\Debug\List\D2A.asm(1120): warning: .cseg .db misalignment - padding zero byte
00002f 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000030 0001      	.DW  0x01
000031 0266      	.DW  __seed_G101
000032 0054      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
000033 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000034 94f8      	CLI
000035 27ee      	CLR  R30
000036 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000037 e0f1      	LDI  R31,1
000038 bffb      	OUT  GICR,R31
000039 bfeb      	OUT  GICR,R30
00003a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00003b e08d      	LDI  R24,(14-2)+1
00003c e0a2      	LDI  R26,2
00003d 27bb      	CLR  R27
                 __CLEAR_REG:
00003e 93ed      	ST   X+,R30
00003f 958a      	DEC  R24
000040 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000041 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000042 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000043 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000044 93ed      	ST   X+,R30
000045 9701      	SBIW R24,1
000046 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000047 e6e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000048 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000049 9185      	LPM  R24,Z+
00004a 9195      	LPM  R25,Z+
00004b 9700      	SBIW R24,0
00004c f061      	BREQ __GLOBAL_INI_END
00004d 91a5      	LPM  R26,Z+
00004e 91b5      	LPM  R27,Z+
00004f 9005      	LPM  R0,Z+
000050 9015      	LPM  R1,Z+
000051 01bf      	MOVW R22,R30
000052 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000053 9005      	LPM  R0,Z+
000054 920d      	ST   X+,R0
000055 9701      	SBIW R24,1
000056 f7e1      	BRNE __GLOBAL_INI_LOOP
000057 01fb      	MOVW R30,R22
000058 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000059 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00005a bfed      	OUT  SPL,R30
00005b e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00005c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00005d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00005e e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00005f 940c 0061 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*
                 ; * D2A.c
                 ; *
                 ; * Created: 6/15/2024 3:55:17 PM
                 ; * Author: MHTrXz
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <math.h>
                 ;
                 ;#define T (2 * PI / 256)
                 ;
                 ;int i;
                 ;float f;
                 ;
                 ;void main(void)
                 ; 0000 0011 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0012 
                 ; 0000 0013 DDRA = 0xff;
000061 efef      	LDI  R30,LOW(255)
000062 bbea      	OUT  0x1A,R30
                 ; 0000 0014 
                 ; 0000 0015 while (1)
                 _0x3:
                 ; 0000 0016     {
                 ; 0000 0017     // Please write your application code here
                 ; 0000 0018         for (i = 0; i <= 256; i ++) {
000063 e0e0      	LDI  R30,LOW(0)
000064 93e0 0260 	STS  _i,R30
000066 93e0 0261 	STS  _i+1,R30
                 _0x7:
000068 91a0 0260 	LDS  R26,_i
00006a 91b0 0261 	LDS  R27,_i+1
00006c 30a1      	CPI  R26,LOW(0x101)
00006d e0e1      	LDI  R30,HIGH(0x101)
00006e 07be      	CPC  R27,R30
00006f f5bc      	BRGE _0x8
                 ; 0000 0019             f = T * i;
000070 91e0 0260 	LDS  R30,_i
000072 91f0 0261 	LDS  R31,_i+1
000074 940e 034b 	CALL __CWD1
000076 940e 0206 	CALL __CDF1
                +
000078 edab     +LDI R26 , LOW ( 0x3CC90FDB )
000079 e0bf     +LDI R27 , HIGH ( 0x3CC90FDB )
00007a ec89     +LDI R24 , BYTE3 ( 0x3CC90FDB )
00007b e39c     +LDI R25 , BYTE4 ( 0x3CC90FDB )
                 	__GETD2N 0x3CC90FDB
00007c 940e 0290 	CALL __MULF12
00007e 93e0 0262 	STS  _f,R30
000080 93f0 0263 	STS  _f+1,R31
000082 9360 0264 	STS  _f+2,R22
000084 9370 0265 	STS  _f+3,R23
                 ; 0000 001A             PORTA = sin(f) * 127 + 127;
000086 91a0 0262 	LDS  R26,_f
000088 91b0 0263 	LDS  R27,_f+1
00008a 9180 0264 	LDS  R24,_f+2
00008c 9190 0265 	LDS  R25,_f+3
00008e 940e 00f1 	CALL _sin
                +
000090 e0a0     +LDI R26 , LOW ( 0x42FE0000 )
000091 e0b0     +LDI R27 , HIGH ( 0x42FE0000 )
000092 ef8e     +LDI R24 , BYTE3 ( 0x42FE0000 )
000093 e492     +LDI R25 , BYTE4 ( 0x42FE0000 )
                 	__GETD2N 0x42FE0000
000094 940e 0290 	CALL __MULF12
                +
000096 e0a0     +LDI R26 , LOW ( 0x42FE0000 )
000097 e0b0     +LDI R27 , HIGH ( 0x42FE0000 )
000098 ef8e     +LDI R24 , BYTE3 ( 0x42FE0000 )
000099 e492     +LDI R25 , BYTE4 ( 0x42FE0000 )
                 	__GETD2N 0x42FE0000
00009a 940e 0240 	CALL __ADDF12
00009c 940e 01cd 	CALL __CFD1U
00009e bbeb      	OUT  0x1B,R30
                 ; 0000 001B         }
00009f e6a0      	LDI  R26,LOW(_i)
0000a0 e0b2      	LDI  R27,HIGH(_i)
0000a1 91ed      	LD   R30,X+
0000a2 91fd      	LD   R31,X+
0000a3 9631      	ADIW R30,1
0000a4 93fe      	ST   -X,R31
0000a5 93ee      	ST   -X,R30
0000a6 cfc1      	RJMP _0x7
                 _0x8:
                 ; 0000 001C     }
0000a7 cfbb      	RJMP _0x3
                 ; 0000 001D }
                 _0x9:
0000a8 cfff      	RJMP _0x9
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0000a9 940e 035f 	CALL __PUTPARD2
0000ab 817b         ldd  r23,y+3
0000ac 816a         ldd  r22,y+2
0000ad 81f9         ldd  r31,y+1
0000ae 81e8         ld   r30,y
0000af fb77         bst  r23,7
0000b0 0f77         lsl  r23
0000b1 fd67         sbrc r22,7
0000b2 6071         sbr  r23,1
0000b3 2f97         mov  r25,r23
0000b4 579e         subi r25,0x7e
0000b5 f081         breq __ftrunc0
0000b6 f078         brcs __ftrunc0
0000b7 3198         cpi  r25,24
0000b8 f490         brsh __ftrunc1
0000b9 27aa         clr  r26
0000ba 27bb         clr  r27
0000bb 2788         clr  r24
                 __ftrunc2:
0000bc 9408         sec
0000bd 9587         ror  r24
0000be 95b7         ror  r27
0000bf 95a7         ror  r26
0000c0 959a         dec  r25
0000c1 f7d1         brne __ftrunc2
0000c2 23ea         and  r30,r26
0000c3 23fb         and  r31,r27
0000c4 2368         and  r22,r24
0000c5 c005         rjmp __ftrunc1
                 __ftrunc0:
0000c6 94e8         clt
0000c7 2777         clr  r23
0000c8 27ee         clr  r30
0000c9 27ff         clr  r31
0000ca 2766         clr  r22
                 __ftrunc1:
0000cb 776f         cbr  r22,0x80
0000cc 9576         lsr  r23
0000cd f408         brcc __ftrunc3
0000ce 6860         sbr  r22,0x80
                 __ftrunc3:
0000cf f977         bld  r23,7
0000d0 91a9         ld   r26,y+
0000d1 91b9         ld   r27,y+
0000d2 9189         ld   r24,y+
0000d3 9199         ld   r25,y+
0000d4 17ea         cp   r30,r26
0000d5 07fb         cpc  r31,r27
0000d6 0768         cpc  r22,r24
0000d7 0779         cpc  r23,r25
0000d8 fb97         bst  r25,7
0000d9 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0000da 940e 035f 	CALL __PUTPARD2
0000dc 940e 0355 	CALL __GETD2S0
0000de 940e 00a9 	CALL _ftrunc
0000e0 940e 035a 	CALL __PUTD1S0
0000e2 f419          brne __floor1
                 __floor0:
0000e3 940e 0350 	CALL __GETD1S0
0000e5 c009      	RJMP _0x2080001
                 __floor1:
0000e6 f7e6          brtc __floor0
0000e7 940e 0350 	CALL __GETD1S0
                +
0000e9 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0000ea e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0000eb e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0000ec e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0000ed 940e 0239 	CALL __SUBF12
                 _0x2080001:
0000ef 9624      	ADIW R28,4
0000f0 9508      	RET
                 ; .FEND
                 _sin:
                 ; .FSTART _sin
0000f1 940e 035f 	CALL __PUTPARD2
0000f3 9724      	SBIW R28,4
0000f4 931a      	ST   -Y,R17
0000f5 e010      	LDI  R17,0
0000f6 940e 017d 	CALL SUBOPT_0x0
                +
0000f8 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
0000f9 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
0000fa e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
0000fb e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
0000fc 940e 0290 	CALL __MULF12
0000fe 940e 0182 	CALL SUBOPT_0x1
000100 dfd9      	RCALL _floor
000101 940e 017d 	CALL SUBOPT_0x0
000103 940e 0364 	CALL __SWAPD12
000105 940e 0239 	CALL __SUBF12
000107 940e 0182 	CALL SUBOPT_0x1
                +
000109 e0e0     +LDI R30 , LOW ( 0x3F000000 )
00010a e0f0     +LDI R31 , HIGH ( 0x3F000000 )
00010b e060     +LDI R22 , BYTE3 ( 0x3F000000 )
00010c e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
00010d 940e 0323 	CALL __CMPF12
00010f f009      	BREQ PC+2
000110 f408      	BRCC PC+2
000111 c009      	RJMP _0x2000017
000112 940e 0187 	CALL SUBOPT_0x2
                +
000114 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000115 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000116 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000117 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000118 940e 018c 	CALL SUBOPT_0x3
00011a e011      	LDI  R17,LOW(1)
                 _0x2000017:
00011b 940e 017d 	CALL SUBOPT_0x0
                +
00011d e0e0     +LDI R30 , LOW ( 0x3E800000 )
00011e e0f0     +LDI R31 , HIGH ( 0x3E800000 )
00011f e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000120 e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000121 940e 0323 	CALL __CMPF12
000123 f009      	BREQ PC+2
000124 f408      	BRCC PC+2
000125 c008      	RJMP _0x2000018
000126 940e 017d 	CALL SUBOPT_0x0
                +
000128 e0e0     +LDI R30 , LOW ( 0x3F000000 )
000129 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
00012a e060     +LDI R22 , BYTE3 ( 0x3F000000 )
00012b e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
00012c 940e 018c 	CALL SUBOPT_0x3
                 _0x2000018:
00012e 3010      	CPI  R17,0
00012f f041      	BREQ _0x2000019
000130 940e 0187 	CALL SUBOPT_0x2
000132 940e 019a 	CALL __ANEGF1
                +
000134 83ed     +STD Y + 5 , R30
000135 83fe     +STD Y + 5 + 1 , R31
000136 836f     +STD Y + 5 + 2 , R22
000137 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
                 _0x2000019:
000138 940e 0187 	CALL SUBOPT_0x2
00013a 940e 017d 	CALL SUBOPT_0x0
00013c 940e 0290 	CALL __MULF12
                +
00013e 83e9     +STD Y + 1 , R30
00013f 83fa     +STD Y + 1 + 1 , R31
000140 836b     +STD Y + 1 + 2 , R22
000141 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000142 eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000143 ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000144 e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000145 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000146 940e 0290 	CALL __MULF12
000148 01df      	MOVW R26,R30
000149 01cb      	MOVW R24,R22
                +
00014a e1ed     +LDI R30 , LOW ( 0x422DE51D )
00014b eef5     +LDI R31 , HIGH ( 0x422DE51D )
00014c e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
00014d e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
00014e 940e 0364 	CALL __SWAPD12
000150 940e 0239 	CALL __SUBF12
000152 940e 0193 	CALL SUBOPT_0x4
                +
000154 e4ac     +LDI R26 , LOW ( 0x4104534C )
000155 e5b3     +LDI R27 , HIGH ( 0x4104534C )
000156 e084     +LDI R24 , BYTE3 ( 0x4104534C )
000157 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000158 940e 0240 	CALL __ADDF12
00015a 940e 017d 	CALL SUBOPT_0x0
00015c 940e 0290 	CALL __MULF12
00015e 937f      	PUSH R23
00015f 936f      	PUSH R22
000160 93ff      	PUSH R31
000161 93ef      	PUSH R30
                +
000162 81e9     +LDD R30 , Y + 1
000163 81fa     +LDD R31 , Y + 1 + 1
000164 816b     +LDD R22 , Y + 1 + 2
000165 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000166 e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000167 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000168 ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000169 e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
00016a 940e 0240 	CALL __ADDF12
00016c 940e 0193 	CALL SUBOPT_0x4
                +
00016e e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
00016f e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000170 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000171 e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000172 940e 0240 	CALL __ADDF12
000174 91af      	POP  R26
000175 91bf      	POP  R27
000176 918f      	POP  R24
000177 919f      	POP  R25
000178 940e 02de 	CALL __DIVF21
00017a 8118      	LDD  R17,Y+0
00017b 9629      	ADIW R28,9
00017c 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _i:
000260           	.BYTE 0x2
                 _f:
000262           	.BYTE 0x4
                 __seed_G101:
000266           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x0:
                +
00017d 81ad     +LDD R26 , Y + 5
00017e 81be     +LDD R27 , Y + 5 + 1
00017f 818f     +LDD R24 , Y + 5 + 2
000180 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
000181 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
                +
000182 83ed     +STD Y + 5 , R30
000183 83fe     +STD Y + 5 + 1 , R31
000184 836f     +STD Y + 5 + 2 , R22
000185 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
000186 cff6      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
                +
000187 81ed     +LDD R30 , Y + 5
000188 81fe     +LDD R31 , Y + 5 + 1
000189 816f     +LDD R22 , Y + 5 + 2
00018a 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
00018b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
00018c 940e 0239 	CALL __SUBF12
                +
00018e 83ed     +STD Y + 5 , R30
00018f 83fe     +STD Y + 5 + 1 , R31
000190 836f     +STD Y + 5 + 2 , R22
000191 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
000192 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
                +
000193 81a9     +LDD R26 , Y + 1
000194 81ba     +LDD R27 , Y + 1 + 1
000195 818b     +LDD R24 , Y + 1 + 2
000196 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
000197 940e 0290 	CALL __MULF12
000199 9508      	RET
                 
                 
                 	.CSEG
                 __ANEGF1:
00019a 9730      	SBIW R30,0
00019b 4060      	SBCI R22,0
00019c 4070      	SBCI R23,0
00019d f009      	BREQ __ANEGF10
00019e 5870      	SUBI R23,0x80
                 __ANEGF10:
00019f 9508      	RET
                 
                 __ROUND_REPACK:
0001a0 2355      	TST  R21
0001a1 f442      	BRPL __REPACK
0001a2 3850      	CPI  R21,0x80
0001a3 f411      	BRNE __ROUND_REPACK0
0001a4 ffe0      	SBRS R30,0
0001a5 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0001a6 9631      	ADIW R30,1
0001a7 1f69      	ADC  R22,R25
0001a8 1f79      	ADC  R23,R25
0001a9 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0001aa e850      	LDI  R21,0x80
0001ab 2757      	EOR  R21,R23
0001ac f411      	BRNE __REPACK0
0001ad 935f      	PUSH R21
0001ae c0cf      	RJMP __ZERORES
                 __REPACK0:
0001af 3f5f      	CPI  R21,0xFF
0001b0 f031      	BREQ __REPACK1
0001b1 0f66      	LSL  R22
0001b2 0c00      	LSL  R0
0001b3 9557      	ROR  R21
0001b4 9567      	ROR  R22
0001b5 2f75      	MOV  R23,R21
0001b6 9508      	RET
                 __REPACK1:
0001b7 935f      	PUSH R21
0001b8 2000      	TST  R0
0001b9 f00a      	BRMI __REPACK2
0001ba c0cf      	RJMP __MAXRES
                 __REPACK2:
0001bb c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0001bc e850      	LDI  R21,0x80
0001bd 2e19      	MOV  R1,R25
0001be 2215      	AND  R1,R21
0001bf 0f88      	LSL  R24
0001c0 1f99      	ROL  R25
0001c1 2795      	EOR  R25,R21
0001c2 0f55      	LSL  R21
0001c3 9587      	ROR  R24
                 
                 __UNPACK1:
0001c4 e850      	LDI  R21,0x80
0001c5 2e07      	MOV  R0,R23
0001c6 2205      	AND  R0,R21
0001c7 0f66      	LSL  R22
0001c8 1f77      	ROL  R23
0001c9 2775      	EOR  R23,R21
0001ca 0f55      	LSL  R21
0001cb 9567      	ROR  R22
0001cc 9508      	RET
                 
                 __CFD1U:
0001cd 9468      	SET
0001ce c001      	RJMP __CFD1U0
                 __CFD1:
0001cf 94e8      	CLT
                 __CFD1U0:
0001d0 935f      	PUSH R21
0001d1 dff2      	RCALL __UNPACK1
0001d2 3870      	CPI  R23,0x80
0001d3 f018      	BRLO __CFD10
0001d4 3f7f      	CPI  R23,0xFF
0001d5 f408      	BRCC __CFD10
0001d6 c0a7      	RJMP __ZERORES
                 __CFD10:
0001d7 e156      	LDI  R21,22
0001d8 1b57      	SUB  R21,R23
0001d9 f4aa      	BRPL __CFD11
0001da 9551      	NEG  R21
0001db 3058      	CPI  R21,8
0001dc f40e      	BRTC __CFD19
0001dd 3059      	CPI  R21,9
                 __CFD19:
0001de f030      	BRLO __CFD17
0001df efef      	SER  R30
0001e0 efff      	SER  R31
0001e1 ef6f      	SER  R22
0001e2 e77f      	LDI  R23,0x7F
0001e3 f977      	BLD  R23,7
0001e4 c01a      	RJMP __CFD15
                 __CFD17:
0001e5 2777      	CLR  R23
0001e6 2355      	TST  R21
0001e7 f0b9      	BREQ __CFD15
                 __CFD18:
0001e8 0fee      	LSL  R30
0001e9 1fff      	ROL  R31
0001ea 1f66      	ROL  R22
0001eb 1f77      	ROL  R23
0001ec 955a      	DEC  R21
0001ed f7d1      	BRNE __CFD18
0001ee c010      	RJMP __CFD15
                 __CFD11:
0001ef 2777      	CLR  R23
                 __CFD12:
0001f0 3058      	CPI  R21,8
0001f1 f028      	BRLO __CFD13
0001f2 2fef      	MOV  R30,R31
0001f3 2ff6      	MOV  R31,R22
0001f4 2f67      	MOV  R22,R23
0001f5 5058      	SUBI R21,8
0001f6 cff9      	RJMP __CFD12
                 __CFD13:
0001f7 2355      	TST  R21
0001f8 f031      	BREQ __CFD15
                 __CFD14:
0001f9 9576      	LSR  R23
0001fa 9567      	ROR  R22
0001fb 95f7      	ROR  R31
0001fc 95e7      	ROR  R30
0001fd 955a      	DEC  R21
0001fe f7d1      	BRNE __CFD14
                 __CFD15:
0001ff 2000      	TST  R0
000200 f40a      	BRPL __CFD16
000201 d141      	RCALL __ANEGD1
                 __CFD16:
000202 915f      	POP  R21
000203 9508      	RET
                 
                 __CDF1U:
000204 9468      	SET
000205 c001      	RJMP __CDF1U0
                 __CDF1:
000206 94e8      	CLT
                 __CDF1U0:
000207 9730      	SBIW R30,0
000208 4060      	SBCI R22,0
000209 4070      	SBCI R23,0
00020a f0b1      	BREQ __CDF10
00020b 2400      	CLR  R0
00020c f026      	BRTS __CDF11
00020d 2377      	TST  R23
00020e f412      	BRPL __CDF11
00020f 9400      	COM  R0
000210 d132      	RCALL __ANEGD1
                 __CDF11:
000211 2e17      	MOV  R1,R23
000212 e17e      	LDI  R23,30
000213 2011      	TST  R1
                 __CDF12:
000214 f032      	BRMI __CDF13
000215 957a      	DEC  R23
000216 0fee      	LSL  R30
000217 1fff      	ROL  R31
000218 1f66      	ROL  R22
000219 1c11      	ROL  R1
00021a cff9      	RJMP __CDF12
                 __CDF13:
00021b 2fef      	MOV  R30,R31
00021c 2ff6      	MOV  R31,R22
00021d 2d61      	MOV  R22,R1
00021e 935f      	PUSH R21
00021f df8a      	RCALL __REPACK
000220 915f      	POP  R21
                 __CDF10:
000221 9508      	RET
                 
                 __SWAPACC:
000222 934f      	PUSH R20
000223 01af      	MOVW R20,R30
000224 01fd      	MOVW R30,R26
000225 01da      	MOVW R26,R20
000226 01ab      	MOVW R20,R22
000227 01bc      	MOVW R22,R24
000228 01ca      	MOVW R24,R20
000229 2d40      	MOV  R20,R0
00022a 2c01      	MOV  R0,R1
00022b 2e14      	MOV  R1,R20
00022c 914f      	POP  R20
00022d 9508      	RET
                 
                 __UADD12:
00022e 0fea      	ADD  R30,R26
00022f 1ffb      	ADC  R31,R27
000230 1f68      	ADC  R22,R24
000231 9508      	RET
                 
                 __NEGMAN1:
000232 95e0      	COM  R30
000233 95f0      	COM  R31
000234 9560      	COM  R22
000235 5fef      	SUBI R30,-1
000236 4fff      	SBCI R31,-1
000237 4f6f      	SBCI R22,-1
000238 9508      	RET
                 
                 __SUBF12:
000239 935f      	PUSH R21
00023a df81      	RCALL __UNPACK
00023b 3890      	CPI  R25,0x80
00023c f171      	BREQ __ADDF129
00023d e850      	LDI  R21,0x80
00023e 2615      	EOR  R1,R21
                 
00023f c004      	RJMP __ADDF120
                 
                 __ADDF12:
000240 935f      	PUSH R21
000241 df7a      	RCALL __UNPACK
000242 3890      	CPI  R25,0x80
000243 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000244 3870      	CPI  R23,0x80
000245 f121      	BREQ __ADDF128
                 __ADDF121:
000246 2f57      	MOV  R21,R23
000247 1b59      	SUB  R21,R25
000248 f12b      	BRVS __ADDF1211
000249 f412      	BRPL __ADDF122
00024a dfd7      	RCALL __SWAPACC
00024b cffa      	RJMP __ADDF121
                 __ADDF122:
00024c 3158      	CPI  R21,24
00024d f018      	BRLO __ADDF123
00024e 27aa      	CLR  R26
00024f 27bb      	CLR  R27
000250 2788      	CLR  R24
                 __ADDF123:
000251 3058      	CPI  R21,8
000252 f028      	BRLO __ADDF124
000253 2fab      	MOV  R26,R27
000254 2fb8      	MOV  R27,R24
000255 2788      	CLR  R24
000256 5058      	SUBI R21,8
000257 cff9      	RJMP __ADDF123
                 __ADDF124:
000258 2355      	TST  R21
000259 f029      	BREQ __ADDF126
                 __ADDF125:
00025a 9586      	LSR  R24
00025b 95b7      	ROR  R27
00025c 95a7      	ROR  R26
00025d 955a      	DEC  R21
00025e f7d9      	BRNE __ADDF125
                 __ADDF126:
00025f 2d50      	MOV  R21,R0
000260 2551      	EOR  R21,R1
000261 f072      	BRMI __ADDF127
000262 dfcb      	RCALL __UADD12
000263 f438      	BRCC __ADDF129
000264 9567      	ROR  R22
000265 95f7      	ROR  R31
000266 95e7      	ROR  R30
000267 9573      	INC  R23
000268 f413      	BRVC __ADDF129
000269 c020      	RJMP __MAXRES
                 __ADDF128:
00026a dfb7      	RCALL __SWAPACC
                 __ADDF129:
00026b df3e      	RCALL __REPACK
00026c 915f      	POP  R21
00026d 9508      	RET
                 __ADDF1211:
00026e f7d8      	BRCC __ADDF128
00026f cffb      	RJMP __ADDF129
                 __ADDF127:
000270 1bea      	SUB  R30,R26
000271 0bfb      	SBC  R31,R27
000272 0b68      	SBC  R22,R24
000273 f051      	BREQ __ZERORES
000274 f410      	BRCC __ADDF1210
000275 9400      	COM  R0
000276 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000277 2366      	TST  R22
000278 f392      	BRMI __ADDF129
000279 0fee      	LSL  R30
00027a 1fff      	ROL  R31
00027b 1f66      	ROL  R22
00027c 957a      	DEC  R23
00027d f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00027e 27ee      	CLR  R30
00027f 27ff      	CLR  R31
000280 2766      	CLR  R22
000281 2777      	CLR  R23
000282 915f      	POP  R21
000283 9508      	RET
                 
                 __MINRES:
000284 efef      	SER  R30
000285 efff      	SER  R31
000286 e76f      	LDI  R22,0x7F
000287 ef7f      	SER  R23
000288 915f      	POP  R21
000289 9508      	RET
                 
                 __MAXRES:
00028a efef      	SER  R30
00028b efff      	SER  R31
00028c e76f      	LDI  R22,0x7F
00028d e77f      	LDI  R23,0x7F
00028e 915f      	POP  R21
00028f 9508      	RET
                 
                 __MULF12:
000290 935f      	PUSH R21
000291 df2a      	RCALL __UNPACK
000292 3870      	CPI  R23,0x80
000293 f351      	BREQ __ZERORES
000294 3890      	CPI  R25,0x80
000295 f341      	BREQ __ZERORES
000296 2401      	EOR  R0,R1
000297 9408      	SEC
000298 1f79      	ADC  R23,R25
000299 f423      	BRVC __MULF124
00029a f31c      	BRLT __ZERORES
                 __MULF125:
00029b 2000      	TST  R0
00029c f33a      	BRMI __MINRES
00029d cfec      	RJMP __MAXRES
                 __MULF124:
00029e 920f      	PUSH R0
00029f 931f      	PUSH R17
0002a0 932f      	PUSH R18
0002a1 933f      	PUSH R19
0002a2 934f      	PUSH R20
0002a3 2711      	CLR  R17
0002a4 2722      	CLR  R18
0002a5 2799      	CLR  R25
0002a6 9f68      	MUL  R22,R24
0002a7 01a0      	MOVW R20,R0
0002a8 9f8f      	MUL  R24,R31
0002a9 2d30      	MOV  R19,R0
0002aa 0d41      	ADD  R20,R1
0002ab 1f59      	ADC  R21,R25
0002ac 9f6b      	MUL  R22,R27
0002ad 0d30      	ADD  R19,R0
0002ae 1d41      	ADC  R20,R1
0002af 1f59      	ADC  R21,R25
0002b0 9f8e      	MUL  R24,R30
0002b1 d027      	RCALL __MULF126
0002b2 9fbf      	MUL  R27,R31
0002b3 d025      	RCALL __MULF126
0002b4 9f6a      	MUL  R22,R26
0002b5 d023      	RCALL __MULF126
0002b6 9fbe      	MUL  R27,R30
0002b7 d01d      	RCALL __MULF127
0002b8 9faf      	MUL  R26,R31
0002b9 d01b      	RCALL __MULF127
0002ba 9fae      	MUL  R26,R30
0002bb 0d11      	ADD  R17,R1
0002bc 1f29      	ADC  R18,R25
0002bd 1f39      	ADC  R19,R25
0002be 1f49      	ADC  R20,R25
0002bf 1f59      	ADC  R21,R25
0002c0 2fe3      	MOV  R30,R19
0002c1 2ff4      	MOV  R31,R20
0002c2 2f65      	MOV  R22,R21
0002c3 2f52      	MOV  R21,R18
0002c4 914f      	POP  R20
0002c5 913f      	POP  R19
0002c6 912f      	POP  R18
0002c7 911f      	POP  R17
0002c8 900f      	POP  R0
0002c9 2366      	TST  R22
0002ca f02a      	BRMI __MULF122
0002cb 0f55      	LSL  R21
0002cc 1fee      	ROL  R30
0002cd 1fff      	ROL  R31
0002ce 1f66      	ROL  R22
0002cf c002      	RJMP __MULF123
                 __MULF122:
0002d0 9573      	INC  R23
0002d1 f24b      	BRVS __MULF125
                 __MULF123:
0002d2 decd      	RCALL __ROUND_REPACK
0002d3 915f      	POP  R21
0002d4 9508      	RET
                 
                 __MULF127:
0002d5 0d10      	ADD  R17,R0
0002d6 1d21      	ADC  R18,R1
0002d7 1f39      	ADC  R19,R25
0002d8 c002      	RJMP __MULF128
                 __MULF126:
0002d9 0d20      	ADD  R18,R0
0002da 1d31      	ADC  R19,R1
                 __MULF128:
0002db 1f49      	ADC  R20,R25
0002dc 1f59      	ADC  R21,R25
0002dd 9508      	RET
                 
                 __DIVF21:
0002de 935f      	PUSH R21
0002df dedc      	RCALL __UNPACK
0002e0 3870      	CPI  R23,0x80
0002e1 f421      	BRNE __DIVF210
0002e2 2011      	TST  R1
                 __DIVF211:
0002e3 f40a      	BRPL __DIVF219
0002e4 cf9f      	RJMP __MINRES
                 __DIVF219:
0002e5 cfa4      	RJMP __MAXRES
                 __DIVF210:
0002e6 3890      	CPI  R25,0x80
0002e7 f409      	BRNE __DIVF218
                 __DIVF217:
0002e8 cf95      	RJMP __ZERORES
                 __DIVF218:
0002e9 2401      	EOR  R0,R1
0002ea 9408      	SEC
0002eb 0b97      	SBC  R25,R23
0002ec f41b      	BRVC __DIVF216
0002ed f3d4      	BRLT __DIVF217
0002ee 2000      	TST  R0
0002ef cff3      	RJMP __DIVF211
                 __DIVF216:
0002f0 2f79      	MOV  R23,R25
0002f1 931f      	PUSH R17
0002f2 932f      	PUSH R18
0002f3 933f      	PUSH R19
0002f4 934f      	PUSH R20
0002f5 2411      	CLR  R1
0002f6 2711      	CLR  R17
0002f7 2722      	CLR  R18
0002f8 2733      	CLR  R19
0002f9 2744      	CLR  R20
0002fa 2755      	CLR  R21
0002fb e290      	LDI  R25,32
                 __DIVF212:
0002fc 17ae      	CP   R26,R30
0002fd 07bf      	CPC  R27,R31
0002fe 0786      	CPC  R24,R22
0002ff 0741      	CPC  R20,R17
000300 f030      	BRLO __DIVF213
000301 1bae      	SUB  R26,R30
000302 0bbf      	SBC  R27,R31
000303 0b86      	SBC  R24,R22
000304 0b41      	SBC  R20,R17
000305 9408      	SEC
000306 c001      	RJMP __DIVF214
                 __DIVF213:
000307 9488      	CLC
                 __DIVF214:
000308 1f55      	ROL  R21
000309 1f22      	ROL  R18
00030a 1f33      	ROL  R19
00030b 1c11      	ROL  R1
00030c 1faa      	ROL  R26
00030d 1fbb      	ROL  R27
00030e 1f88      	ROL  R24
00030f 1f44      	ROL  R20
000310 959a      	DEC  R25
000311 f751      	BRNE __DIVF212
000312 01f9      	MOVW R30,R18
000313 2d61      	MOV  R22,R1
000314 914f      	POP  R20
000315 913f      	POP  R19
000316 912f      	POP  R18
000317 911f      	POP  R17
000318 2366      	TST  R22
000319 f032      	BRMI __DIVF215
00031a 0f55      	LSL  R21
00031b 1fee      	ROL  R30
00031c 1fff      	ROL  R31
00031d 1f66      	ROL  R22
00031e 957a      	DEC  R23
00031f f243      	BRVS __DIVF217
                 __DIVF215:
000320 de7f      	RCALL __ROUND_REPACK
000321 915f      	POP  R21
000322 9508      	RET
                 
                 __CMPF12:
000323 2399      	TST  R25
000324 f09a      	BRMI __CMPF120
000325 2377      	TST  R23
000326 f042      	BRMI __CMPF121
000327 1797      	CP   R25,R23
000328 f048      	BRLO __CMPF122
000329 f429      	BRNE __CMPF121
00032a 17ae      	CP   R26,R30
00032b 07bf      	CPC  R27,R31
00032c 0786      	CPC  R24,R22
00032d f020      	BRLO __CMPF122
00032e f031      	BREQ __CMPF123
                 __CMPF121:
00032f 9498      	CLZ
000330 9488      	CLC
000331 9508      	RET
                 __CMPF122:
000332 9498      	CLZ
000333 9408      	SEC
000334 9508      	RET
                 __CMPF123:
000335 9418      	SEZ
000336 9488      	CLC
000337 9508      	RET
                 __CMPF120:
000338 2377      	TST  R23
000339 f7c2      	BRPL __CMPF122
00033a 1797      	CP   R25,R23
00033b f398      	BRLO __CMPF121
00033c f7a9      	BRNE __CMPF122
00033d 17ea      	CP   R30,R26
00033e 07fb      	CPC  R31,R27
00033f 0768      	CPC  R22,R24
000340 f388      	BRLO __CMPF122
000341 f399      	BREQ __CMPF123
000342 cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
000343 95f0      	COM  R31
000344 9560      	COM  R22
000345 9570      	COM  R23
000346 95e1      	NEG  R30
000347 4fff      	SBCI R31,-1
000348 4f6f      	SBCI R22,-1
000349 4f7f      	SBCI R23,-1
00034a 9508      	RET
                 
                 __CWD1:
00034b 2f6f      	MOV  R22,R31
00034c 0f66      	ADD  R22,R22
00034d 0b66      	SBC  R22,R22
00034e 2f76      	MOV  R23,R22
00034f 9508      	RET
                 
                 __GETD1S0:
000350 81e8      	LD   R30,Y
000351 81f9      	LDD  R31,Y+1
000352 816a      	LDD  R22,Y+2
000353 817b      	LDD  R23,Y+3
000354 9508      	RET
                 
                 __GETD2S0:
000355 81a8      	LD   R26,Y
000356 81b9      	LDD  R27,Y+1
000357 818a      	LDD  R24,Y+2
000358 819b      	LDD  R25,Y+3
000359 9508      	RET
                 
                 __PUTD1S0:
00035a 83e8      	ST   Y,R30
00035b 83f9      	STD  Y+1,R31
00035c 836a      	STD  Y+2,R22
00035d 837b      	STD  Y+3,R23
00035e 9508      	RET
                 
                 __PUTPARD2:
00035f 939a      	ST   -Y,R25
000360 938a      	ST   -Y,R24
000361 93ba      	ST   -Y,R27
000362 93aa      	ST   -Y,R26
000363 9508      	RET
                 
                 __SWAPD12:
000364 2e18      	MOV  R1,R24
000365 2f86      	MOV  R24,R22
000366 2d61      	MOV  R22,R1
000367 2e19      	MOV  R1,R25
000368 2f97      	MOV  R25,R23
000369 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00036a 2e1b      	MOV  R1,R27
00036b 2fbf      	MOV  R27,R31
00036c 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00036d 2e1a      	MOV  R1,R26
00036e 2fae      	MOV  R26,R30
00036f 2de1      	MOV  R30,R1
000370 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  26 r1 :  30 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:  15 r18:  12 r19:  12 r20:  22 r21:  63 r22:  75 r23:  70 
r24:  48 r25:  54 r26:  44 r27:  41 r28:   4 r29:   1 r30:  81 r31:  57 
x  :   7 y  :  58 z  :   7 
Registers used: 20 out of 35 (57.1%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   7 
adiw  :   4 and   :   5 andi  :   0 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   7 brcs  :   1 break :   0 breq  :  19 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  10 
brlt  :   2 brmi  :   9 brne  :  15 brpl  :   7 brsh  :   1 brtc  :   2 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  :  48 
cbi   :   0 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  29 cls   :   0 clt   :   3 clv   :   0 clz   :   2 com   :   8 
cp    :   6 cpc   :  11 cpi   :  19 cpse  :   0 dec   :   9 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   2 jmp   :  22 ld    :   9 ldd   :  26 ldi   :  86 
lds   :   8 lpm   :   7 lsl   :  12 lsr   :   3 mov   :  39 movw  :  13 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   0 out   :   8 pop   :  22 push  :  22 rcall :  21 ret   :  32 
reti  :   0 rjmp  :  34 rol   :  24 ror   :  15 sbc   :   7 sbci  :   9 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   6 sbr   :   2 sbrc  :   1 
sbrs  :   1 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  11 std   :  19 sts   :   6 sub   :   4 subi  :   5 swap  :   0 
tst   :  17 wdr   :   0 
Instructions used: 70 out of 116 (60.3%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006e2   1742     20   1762   32768   5.4%
[.dseg] 0x000060 0x00026a      0     10     10    2048   0.5%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
