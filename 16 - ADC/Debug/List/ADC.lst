
AVRASM ver. 2.1.30  C:\Users\MHTrXz\Desktop\ATMEGA32\16 - ADC\Debug\List\ADC.asm Sat Jun 15 18:00:30 2024

C:\Users\MHTrXz\Desktop\ATMEGA32\16 - ADC\Debug\List\ADC.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\MHTrXz\Desktop\ATMEGA32\16 - ADC\Debug\List\ADC.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\MHTrXz\Desktop\ATMEGA32\16 - ADC\Debug\List\ADC.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 2020
00002b 2020
00002c 4557
00002d 434c      	.DB  0x20,0x20,0x20,0x20,0x57,0x45,0x4C,0x43
00002e 4d4f
00002f 2145
000030 2020
000031 2020      	.DB  0x4F,0x4D,0x45,0x21,0x20,0x20,0x20,0x20
000032 5400
000033 4d45
000034 3a50
000035 2020      	.DB  0x0,0x54,0x45,0x4D,0x50,0x3A,0x20,0x20
000036 3325
000037 322e
000038 0066      	.DB  0x25,0x33,0x2E,0x32,0x66,0x0
                 _0x2000000:
000039 4e2d
00003a 4e41
C:\Users\MHTrXz\Desktop\ATMEGA32\16 - ADC\Debug\List\ADC.asm(1127): warning: .cseg .db misalignment - padding zero byte
00003b 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2020003:
00003c c080      	.DB  0x80,0xC0
                 _0x20A0060:
C:\Users\MHTrXz\Desktop\ATMEGA32\16 - ADC\Debug\List\ADC.asm(1131): warning: .cseg .db misalignment - padding zero byte
00003d 0001      	.DB  0x1
                 _0x20A0000:
00003e 4e2d
00003f 4e41
000040 4900
000041 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\MHTrXz\Desktop\ATMEGA32\16 - ADC\Debug\List\ADC.asm(1134): warning: .cseg .db misalignment - padding zero byte
000042 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000043 0011      	.DW  0x11
000044 0260      	.DW  _0x6
000045 0054      	.DW  _0x0*2
                 
000046 0002      	.DW  0x02
000047 0285      	.DW  __base_y_G101
000048 0078      	.DW  _0x2020003*2
                 
000049 0001      	.DW  0x01
00004a 0289      	.DW  __seed_G105
00004b 007a      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
00004c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004d 94f8      	CLI
00004e 27ee      	CLR  R30
00004f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000050 e0f1      	LDI  R31,1
000051 bffb      	OUT  GICR,R31
000052 bfeb      	OUT  GICR,R30
000053 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000054 e08d      	LDI  R24,(14-2)+1
000055 e0a2      	LDI  R26,2
000056 27bb      	CLR  R27
                 __CLEAR_REG:
000057 93ed      	ST   X+,R30
000058 958a      	DEC  R24
000059 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005d 93ed      	ST   X+,R30
00005e 9701      	SBIW R24,1
00005f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000060 e8e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000061 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000062 9185      	LPM  R24,Z+
000063 9195      	LPM  R25,Z+
000064 9700      	SBIW R24,0
000065 f061      	BREQ __GLOBAL_INI_END
000066 91a5      	LPM  R26,Z+
000067 91b5      	LPM  R27,Z+
000068 9005      	LPM  R0,Z+
000069 9015      	LPM  R1,Z+
00006a 01bf      	MOVW R22,R30
00006b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006c 9005      	LPM  R0,Z+
00006d 920d      	ST   X+,R0
00006e 9701      	SBIW R24,1
00006f f7e1      	BRNE __GLOBAL_INI_LOOP
000070 01fb      	MOVW R30,R22
000071 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000072 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000073 bfed      	OUT  SPL,R30
000074 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000075 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000076 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000077 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000078 940c 0088 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;// Alphanumeric LCD functions
                 ;#include <alcd.h>
                 ;
                 ;// Declare your global variables here
                 ;
                 ;// Voltage Reference: AREF pin
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 000F {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0010 ADMUX=adc_input | ADC_VREF_TYPE;
00007a 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
00007b 81e8      	LD   R30,Y
00007c b9e7      	OUT  0x7,R30
                 ; 0000 0011 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0012 delay_us(10);
                +
00007d e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00007e 958a     +DEC R24
00007f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0013 // Start the AD conversion
                 ; 0000 0014 ADCSRA|=(1<<ADSC);
000080 9a36      	SBI  0x6,6
                 ; 0000 0015 // Wait for the AD conversion to complete
                 ; 0000 0016 while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000081 9b34      	SBIS 0x6,4
000082 cffe      	RJMP _0x3
                 ; 0000 0017 ADCSRA|=(1<<ADIF);
000083 9a34      	SBI  0x6,4
                 ; 0000 0018 return ADCW;
000084 b1e4      	IN   R30,0x4
000085 b1f5      	IN   R31,0x4+1
000086 940c 04c7 	JMP  _0x20C0004
                 ; 0000 0019 }
                 ; .FEND
                 ;
                 ;
                 ;float read_temp;
                 ;char temp[16];
                 ;
                 ;void main(void)
                 ; 0000 0020 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0021 
                 ; 0000 0022 DDRA=0000000;
000088 e0e0      	LDI  R30,LOW(0)
000089 bbea      	OUT  0x1A,R30
                 ; 0000 0023 PORTA=00000000;
00008a bbeb      	OUT  0x1B,R30
                 ; 0000 0024 
                 ; 0000 0025 DDRB=00000000;
00008b bbe7      	OUT  0x17,R30
                 ; 0000 0026 PORTB=00000000;
00008c bbe8      	OUT  0x18,R30
                 ; 0000 0027 
                 ; 0000 0028 DDRC=00000000;
00008d bbe4      	OUT  0x14,R30
                 ; 0000 0029 PORTC=00000000;
00008e bbe5      	OUT  0x15,R30
                 ; 0000 002A 
                 ; 0000 002B DDRD=00000000;
00008f bbe1      	OUT  0x11,R30
                 ; 0000 002C PORTD=00000000;
000090 bbe2      	OUT  0x12,R30
                 ; 0000 002D 
                 ; 0000 002E // ADC initialization
                 ; 0000 002F // ADC Clock frequency: 1000.000 kHz
                 ; 0000 0030 // ADC Voltage Reference: AREF pin
                 ; 0000 0031 // ADC Auto Trigger Source: ADC Stopped
                 ; 0000 0032 ADMUX=ADC_VREF_TYPE;
000091 b9e7      	OUT  0x7,R30
                 ; 0000 0033 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
000092 e8e3      	LDI  R30,LOW(131)
000093 b9e6      	OUT  0x6,R30
                 ; 0000 0034 SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
000094 e0e0      	LDI  R30,LOW(0)
000095 bfe0      	OUT  0x30,R30
                 ; 0000 0035 
                 ; 0000 0036 // SPI initialization
                 ; 0000 0037 // SPI disabled
                 ; 0000 0038 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
000096 b9ed      	OUT  0xD,R30
                 ; 0000 0039 
                 ; 0000 003A // TWI initialization
                 ; 0000 003B // TWI disabled
                 ; 0000 003C TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
000097 bfe6      	OUT  0x36,R30
                 ; 0000 003D 
                 ; 0000 003E 
                 ; 0000 003F lcd_init(16);
000098 e1a0      	LDI  R26,LOW(16)
000099 940e 049b 	CALL _lcd_init
                 ; 0000 0040 lcd_clear();
00009b 940e 0469 	CALL _lcd_clear
                 ; 0000 0041 lcd_puts("    WELCOME!    ");
                +
00009d e6a0     +LDI R26 , LOW ( _0x6 + ( 0 ) )
00009e e0b2     +LDI R27 , HIGH ( _0x6 + ( 0 ) )
                 	__POINTW2MN _0x6,0
00009f 940e 048a 	CALL _lcd_puts
                 ; 0000 0042 delay_ms(300);
0000a1 e2ac      	LDI  R26,LOW(300)
0000a2 e0b1      	LDI  R27,HIGH(300)
0000a3 940e 06da 	CALL _delay_ms
                 ; 0000 0043 lcd_clear();
0000a5 940e 0469 	CALL _lcd_clear
                 ; 0000 0044 while (1)
                 _0x7:
                 ; 0000 0045       {
                 ; 0000 0046       // Place your code here
                 ; 0000 0047           read_temp = read_adc(0)/2.048;
0000a7 e0a0      	LDI  R26,LOW(0)
0000a8 dfd1      	RCALL _read_adc
0000a9 2766      	CLR  R22
0000aa 2777      	CLR  R23
0000ab 940e 0750 	CALL __CDF1
0000ad 01df      	MOVW R26,R30
0000ae 01cb      	MOVW R24,R22
                +
0000af e6ef     +LDI R30 , LOW ( 0x4003126F )
0000b0 e1f2     +LDI R31 , HIGH ( 0x4003126F )
0000b1 e063     +LDI R22 , BYTE3 ( 0x4003126F )
0000b2 e470     +LDI R23 , BYTE4 ( 0x4003126F )
                 	__GETD1N 0x4003126F
0000b3 940e 0828 	CALL __DIVF21
0000b5 93e0 0271 	STS  _read_temp,R30
0000b7 93f0 0272 	STS  _read_temp+1,R31
0000b9 9360 0273 	STS  _read_temp+2,R22
0000bb 9370 0274 	STS  _read_temp+3,R23
                 ; 0000 0048           sprintf(temp, "TEMP:  %3.2f", read_temp);
0000bd e7e5      	LDI  R30,LOW(_temp)
0000be e0f2      	LDI  R31,HIGH(_temp)
0000bf 93fa      	ST   -Y,R31
0000c0 93ea      	ST   -Y,R30
                +
0000c1 e6e5     +LDI R30 , LOW ( 2 * _0x0 + ( 17 ) )
0000c2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW1FN _0x0,17
0000c3 93fa      	ST   -Y,R31
0000c4 93ea      	ST   -Y,R30
0000c5 91e0 0271 	LDS  R30,_read_temp
0000c7 91f0 0272 	LDS  R31,_read_temp+1
0000c9 9160 0273 	LDS  R22,_read_temp+2
0000cb 9170 0274 	LDS  R23,_read_temp+3
0000cd 940e 0911 	CALL __PUTPARD1
0000cf e084      	LDI  R24,4
0000d0 940e 0408 	CALL _sprintf
0000d2 9628      	ADIW R28,8
                 ; 0000 0049           lcd_gotoxy(0, 0);
0000d3 e0e0      	LDI  R30,LOW(0)
0000d4 93ea      	ST   -Y,R30
0000d5 e0a0      	LDI  R26,LOW(0)
0000d6 940e 045c 	CALL _lcd_gotoxy
                 ; 0000 004A           lcd_puts(temp);
0000d8 e7a5      	LDI  R26,LOW(_temp)
0000d9 e0b2      	LDI  R27,HIGH(_temp)
0000da 940e 048a 	CALL _lcd_puts
                 ; 0000 004B           delay_ms(500);
0000dc efa4      	LDI  R26,LOW(500)
0000dd e0b1      	LDI  R27,HIGH(500)
0000de 940e 06da 	CALL _delay_ms
                 ; 0000 004C       }
0000e0 cfc6      	RJMP _0x7
                 ; 0000 004D }
                 _0xA:
0000e1 cfff      	RJMP _0xA
                 ; .FEND
                 
                 	.DSEG
                 _0x6:
000260           	.BYTE 0x11
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0000e2 93ba      	ST   -Y,R27
0000e3 93aa      	ST   -Y,R26
0000e4 931a      	ST   -Y,R17
0000e5 930a      	ST   -Y,R16
0000e6 81aa      	LDD  R26,Y+2
0000e7 81bb      	LDD  R27,Y+2+1
0000e8 9612      	ADIW R26,2
0000e9 940e 08f8 	CALL __GETW1P
0000eb 9730      	SBIW R30,0
0000ec f129      	BREQ _0x2000010
0000ed 81aa      	LDD  R26,Y+2
0000ee 81bb      	LDD  R27,Y+2+1
0000ef 9614      	ADIW R26,4
0000f0 940e 08f8 	CALL __GETW1P
0000f2 018f      	MOVW R16,R30
0000f3 9730      	SBIW R30,0
0000f4 f061      	BREQ _0x2000012
                +
0000f5 3002     +CPI R16 , LOW ( 2 )
0000f6 e0e0     +LDI R30 , HIGH ( 2 )
0000f7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0000f8 f080      	BRLO _0x2000013
0000f9 01f8      	MOVW R30,R16
0000fa 9731      	SBIW R30,1
0000fb 018f      	MOVW R16,R30
                +
0000fc 81aa     +LDD R26 , Y + 2
0000fd 81bb     +LDD R27 , Y + 2 + 1
0000fe 9614     +ADIW R26 , 4
0000ff 93ed     +ST X + , R30
000100 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000101 81aa      	LDD  R26,Y+2
000102 81bb      	LDD  R27,Y+2+1
000103 9612      	ADIW R26,2
000104 940e 05d8 	CALL SUBOPT_0x0
000106 9731      	SBIW R30,1
000107 81ac      	LDD  R26,Y+4
000108 83a0      	STD  Z+0,R26
                 _0x2000013:
000109 81aa      	LDD  R26,Y+2
00010a 81bb      	LDD  R27,Y+2+1
00010b 940e 08f8 	CALL __GETW1P
00010d 23ff      	TST  R31
00010e f012      	BRMI _0x2000014
00010f 940e 05d8 	CALL SUBOPT_0x0
                 _0x2000014:
000111 c006      	RJMP _0x2000015
                 _0x2000010:
000112 81aa      	LDD  R26,Y+2
000113 81bb      	LDD  R27,Y+2+1
000114 efef      	LDI  R30,LOW(65535)
000115 efff      	LDI  R31,HIGH(65535)
000116 93ed      	ST   X+,R30
000117 93fc      	ST   X,R31
                 _0x2000015:
000118 8119      	LDD  R17,Y+1
000119 8108      	LDD  R16,Y+0
00011a 9625      	ADIW R28,5
00011b 9508      	RET
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
00011c 940e 05de 	CALL SUBOPT_0x1
00011e e8e0      	LDI  R30,LOW(128)
00011f 83ea      	STD  Y+2,R30
000120 e3ef      	LDI  R30,LOW(63)
000121 83eb      	STD  Y+3,R30
000122 940e 092e 	CALL __SAVELOCR4
000124 85ee      	LDD  R30,Y+14
000125 85ff      	LDD  R31,Y+14+1
000126 3fef      	CPI  R30,LOW(0xFFFF)
000127 efaf      	LDI  R26,HIGH(0xFFFF)
000128 07fa      	CPC  R31,R26
000129 f449      	BRNE _0x2000019
00012a 85e8      	LDD  R30,Y+8
00012b 85f9      	LDD  R31,Y+8+1
00012c 93fa      	ST   -Y,R31
00012d 93ea      	ST   -Y,R30
                +
00012e e7a2     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
00012f e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
000130 940e 04c9 	CALL _strcpyf
000132 c0b7      	RJMP _0x20C0006
                 _0x2000019:
000133 3fef      	CPI  R30,LOW(0x7FFF)
000134 e7af      	LDI  R26,HIGH(0x7FFF)
000135 07fa      	CPC  R31,R26
000136 f449      	BRNE _0x2000018
000137 85e8      	LDD  R30,Y+8
000138 85f9      	LDD  R31,Y+8+1
000139 93fa      	ST   -Y,R31
00013a 93ea      	ST   -Y,R30
                +
00013b e7a3     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
00013c e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
00013d 940e 04c9 	CALL _strcpyf
00013f c0aa      	RJMP _0x20C0006
                 _0x2000018:
000140 85ab      	LDD  R26,Y+11
000141 30a7      	CPI  R26,LOW(0x7)
000142 f010      	BRLO _0x200001B
000143 e0e6      	LDI  R30,LOW(6)
000144 87eb      	STD  Y+11,R30
                 _0x200001B:
000145 851b      	LDD  R17,Y+11
                 _0x200001C:
000146 2fe1      	MOV  R30,R17
000147 5011      	SUBI R17,1
000148 30e0      	CPI  R30,0
000149 f019      	BREQ _0x200001E
00014a 940e 05e5 	CALL SUBOPT_0x2
00014c cff9      	RJMP _0x200001C
                 _0x200001E:
                +
00014d 85ec     +LDD R30 , Y + 12
00014e 85fd     +LDD R31 , Y + 12 + 1
00014f 856e     +LDD R22 , Y + 12 + 2
000150 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000151 940e 0928 	CALL __CPD10
000153 f421      	BRNE _0x200001F
000154 e030      	LDI  R19,LOW(0)
000155 940e 05e5 	CALL SUBOPT_0x2
000157 c02d      	RJMP _0x2000020
                 _0x200001F:
000158 853b      	LDD  R19,Y+11
000159 940e 05f4 	CALL SUBOPT_0x3
00015b f009      	BREQ PC+2
00015c f408      	BRCC PC+2
00015d c00b      	RJMP _0x2000021
00015e 940e 05e5 	CALL SUBOPT_0x2
                 _0x2000022:
000160 940e 05f4 	CALL SUBOPT_0x3
000162 f028      	BRLO _0x2000024
000163 940e 05ff 	CALL SUBOPT_0x4
000165 940e 0604 	CALL SUBOPT_0x5
000167 cff8      	RJMP _0x2000022
                 _0x2000024:
000168 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
000169 940e 05f4 	CALL SUBOPT_0x3
00016b f440      	BRSH _0x2000028
00016c 940e 05ff 	CALL SUBOPT_0x4
00016e 940e 0610 	CALL SUBOPT_0x6
000170 940e 0617 	CALL SUBOPT_0x7
000172 5031      	SUBI R19,LOW(1)
000173 cff5      	RJMP _0x2000026
                 _0x2000028:
000174 940e 05e5 	CALL SUBOPT_0x2
                 _0x2000025:
                +
000176 85ec     +LDD R30 , Y + 12
000177 85fd     +LDD R31 , Y + 12 + 1
000178 856e     +LDD R22 , Y + 12 + 2
000179 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00017a 940e 061c 	CALL SUBOPT_0x8
00017c 940e 0617 	CALL SUBOPT_0x7
00017e 940e 05f4 	CALL SUBOPT_0x3
000180 f020      	BRLO _0x2000029
000181 940e 05ff 	CALL SUBOPT_0x4
000183 940e 0604 	CALL SUBOPT_0x5
                 _0x2000029:
                 _0x2000020:
000185 e010      	LDI  R17,LOW(0)
                 _0x200002A:
000186 85eb      	LDD  R30,Y+11
000187 17e1      	CP   R30,R17
000188 f1a8      	BRLO _0x200002C
                +
000189 81ac     +LDD R26 , Y + 4
00018a 81bd     +LDD R27 , Y + 4 + 1
00018b 818e     +LDD R24 , Y + 4 + 2
00018c 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00018d 940e 0623 	CALL SUBOPT_0x9
00018f 940e 061c 	CALL SUBOPT_0x8
000191 01df      	MOVW R26,R30
000192 01cb      	MOVW R24,R22
000193 940e 0520 	CALL _floor
                +
000195 83ec     +STD Y + 4 , R30
000196 83fd     +STD Y + 4 + 1 , R31
000197 836e     +STD Y + 4 + 2 , R22
000198 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000199 940e 05ff 	CALL SUBOPT_0x4
00019b 940e 0828 	CALL __DIVF21
00019d 940e 0717 	CALL __CFD1U
00019f 2f0e      	MOV  R16,R30
0001a0 940e 062a 	CALL SUBOPT_0xA
0001a2 940e 0631 	CALL SUBOPT_0xB
0001a4 27ff      	CLR  R31
0001a5 2766      	CLR  R22
0001a6 2777      	CLR  R23
0001a7 940e 0750 	CALL __CDF1
                +
0001a9 81ac     +LDD R26 , Y + 4
0001aa 81bd     +LDD R27 , Y + 4 + 1
0001ab 818e     +LDD R24 , Y + 4 + 2
0001ac 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0001ad 940e 07da 	CALL __MULF12
0001af 940e 05ff 	CALL SUBOPT_0x4
0001b1 940e 0636 	CALL SUBOPT_0xC
0001b3 940e 0617 	CALL SUBOPT_0x7
0001b5 2fe1      	MOV  R30,R17
0001b6 5f1f      	SUBI R17,-1
0001b7 30e0      	CPI  R30,0
0001b8 f669      	BRNE _0x200002A
0001b9 940e 062a 	CALL SUBOPT_0xA
0001bb e2ee      	LDI  R30,LOW(46)
0001bc 93ec      	ST   X,R30
0001bd cfc8      	RJMP _0x200002A
                 _0x200002C:
0001be 940e 063b 	CALL SUBOPT_0xD
0001c0 9731      	SBIW R30,1
0001c1 85aa      	LDD  R26,Y+10
0001c2 83a0      	STD  Z+0,R26
0001c3 3030      	CPI  R19,0
0001c4 f42c      	BRGE _0x200002E
0001c5 9531      	NEG  R19
0001c6 85a8      	LDD  R26,Y+8
0001c7 85b9      	LDD  R27,Y+8+1
0001c8 e2ed      	LDI  R30,LOW(45)
0001c9 c003      	RJMP _0x2000113
                 _0x200002E:
0001ca 85a8      	LDD  R26,Y+8
0001cb 85b9      	LDD  R27,Y+8+1
0001cc e2eb      	LDI  R30,LOW(43)
                 _0x2000113:
0001cd 93ec      	ST   X,R30
0001ce 940e 063b 	CALL SUBOPT_0xD
0001d0 940e 063b 	CALL SUBOPT_0xD
0001d2 9731      	SBIW R30,1
0001d3 01bf      	MOVW R22,R30
0001d4 2fa3      	MOV  R26,R19
0001d5 e0ea      	LDI  R30,LOW(10)
0001d6 940e 08b2 	CALL __DIVB21
0001d8 5de0      	SUBI R30,-LOW(48)
0001d9 01db      	MOVW R26,R22
0001da 93ec      	ST   X,R30
0001db 940e 063b 	CALL SUBOPT_0xD
0001dd 9731      	SBIW R30,1
0001de 01bf      	MOVW R22,R30
0001df 2fa3      	MOV  R26,R19
0001e0 e0ea      	LDI  R30,LOW(10)
0001e1 940e 08dc 	CALL __MODB21
0001e3 5de0      	SUBI R30,-LOW(48)
0001e4 01db      	MOVW R26,R22
0001e5 93ec      	ST   X,R30
0001e6 85a8      	LDD  R26,Y+8
0001e7 85b9      	LDD  R27,Y+8+1
0001e8 e0e0      	LDI  R30,LOW(0)
0001e9 93ec      	ST   X,R30
                 _0x20C0006:
0001ea 940e 0935 	CALL __LOADLOCR4
0001ec 9660      	ADIW R28,16
0001ed 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0001ee 93ba      	ST   -Y,R27
0001ef 93aa      	ST   -Y,R26
0001f0 97ef      	SBIW R28,63
0001f1 9761      	SBIW R28,17
0001f2 940e 092c 	CALL __SAVELOCR6
0001f4 e010      	LDI  R17,0
                +
0001f5 01fe     +MOVW R30 , R28
0001f6 5ae8     +SUBI R30 , LOW ( - 88 )
0001f7 4fff     +SBCI R31 , HIGH ( - 88 )
0001f8 9001     +LD R0 , Z +
0001f9 81f0     +LD R31 , Z
0001fa 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0001fb 87e8      	STD  Y+8,R30
0001fc 87f9      	STD  Y+8+1,R31
                +
0001fd 01fe     +MOVW R30 , R28
0001fe 5aea     +SUBI R30 , LOW ( - 86 )
0001ff 4fff     +SBCI R31 , HIGH ( - 86 )
000200 9001     +LD R0 , Z +
000201 81f0     +LD R31 , Z
000202 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000203 83ee      	STD  Y+6,R30
000204 83ff      	STD  Y+6+1,R31
000205 81ae      	LDD  R26,Y+6
000206 81bf      	LDD  R27,Y+6+1
000207 e0e0      	LDI  R30,LOW(0)
000208 e0f0      	LDI  R31,HIGH(0)
000209 93ed      	ST   X+,R30
00020a 93fc      	ST   X,R31
                 _0x2000030:
00020b 01de      	MOVW R26,R28
00020c 5aa4      	SUBI R26,LOW(-(92))
00020d 4fbf      	SBCI R27,HIGH(-(92))
00020e 940e 05d8 	CALL SUBOPT_0x0
000210 9731      	SBIW R30,1
000211 91e4      	LPM  R30,Z
000212 2f2e      	MOV  R18,R30
000213 30e0      	CPI  R30,0
000214 f409      	BRNE PC+2
000215 c1e9      	RJMP _0x2000032
000216 2fe1      	MOV  R30,R17
000217 30e0      	CPI  R30,0
000218 f439      	BRNE _0x2000036
000219 3225      	CPI  R18,37
00021a f411      	BRNE _0x2000037
00021b e011      	LDI  R17,LOW(1)
00021c c002      	RJMP _0x2000038
                 _0x2000037:
00021d 940e 0641 	CALL SUBOPT_0xE
                 _0x2000038:
00021f c1de      	RJMP _0x2000035
                 _0x2000036:
000220 30e1      	CPI  R30,LOW(0x1)
000221 f4c1      	BRNE _0x2000039
000222 3225      	CPI  R18,37
000223 f419      	BRNE _0x200003A
000224 940e 0641 	CALL SUBOPT_0xE
000226 c1d6      	RJMP _0x2000114
                 _0x200003A:
000227 e012      	LDI  R17,LOW(2)
000228 e0e0      	LDI  R30,LOW(0)
000229 8bed      	STD  Y+21,R30
00022a e000      	LDI  R16,LOW(0)
00022b 322d      	CPI  R18,45
00022c f411      	BRNE _0x200003B
00022d e001      	LDI  R16,LOW(1)
00022e c1cf      	RJMP _0x2000035
                 _0x200003B:
00022f 322b      	CPI  R18,43
000230 f419      	BRNE _0x200003C
000231 e2eb      	LDI  R30,LOW(43)
000232 8bed      	STD  Y+21,R30
000233 c1ca      	RJMP _0x2000035
                 _0x200003C:
000234 3220      	CPI  R18,32
000235 f419      	BRNE _0x200003D
000236 e2e0      	LDI  R30,LOW(32)
000237 8bed      	STD  Y+21,R30
000238 c1c5      	RJMP _0x2000035
                 _0x200003D:
000239 c002      	RJMP _0x200003E
                 _0x2000039:
00023a 30e2      	CPI  R30,LOW(0x2)
00023b f439      	BRNE _0x200003F
                 _0x200003E:
00023c e050      	LDI  R21,LOW(0)
00023d e013      	LDI  R17,LOW(3)
00023e 3320      	CPI  R18,48
00023f f411      	BRNE _0x2000040
000240 6800      	ORI  R16,LOW(128)
000241 c1bc      	RJMP _0x2000035
                 _0x2000040:
000242 c002      	RJMP _0x2000041
                 _0x200003F:
000243 30e3      	CPI  R30,LOW(0x3)
000244 f491      	BRNE _0x2000042
                 _0x2000041:
000245 3320      	CPI  R18,48
000246 f010      	BRLO _0x2000044
000247 332a      	CPI  R18,58
000248 f008      	BRLO _0x2000045
                 _0x2000044:
000249 c007      	RJMP _0x2000043
                 _0x2000045:
00024a e0aa      	LDI  R26,LOW(10)
00024b 9f5a      	MUL  R21,R26
00024c 2d50      	MOV  R21,R0
00024d 2fe2      	MOV  R30,R18
00024e 53e0      	SUBI R30,LOW(48)
00024f 0f5e      	ADD  R21,R30
000250 c1ad      	RJMP _0x2000035
                 _0x2000043:
000251 e040      	LDI  R20,LOW(0)
000252 322e      	CPI  R18,46
000253 f411      	BRNE _0x2000046
000254 e014      	LDI  R17,LOW(4)
000255 c1a8      	RJMP _0x2000035
                 _0x2000046:
000256 c00f      	RJMP _0x2000047
                 _0x2000042:
000257 30e4      	CPI  R30,LOW(0x4)
000258 f499      	BRNE _0x2000049
000259 3320      	CPI  R18,48
00025a f010      	BRLO _0x200004B
00025b 332a      	CPI  R18,58
00025c f008      	BRLO _0x200004C
                 _0x200004B:
00025d c008      	RJMP _0x200004A
                 _0x200004C:
00025e 6200      	ORI  R16,LOW(32)
00025f e0aa      	LDI  R26,LOW(10)
000260 9f4a      	MUL  R20,R26
000261 2d40      	MOV  R20,R0
000262 2fe2      	MOV  R30,R18
000263 53e0      	SUBI R30,LOW(48)
000264 0f4e      	ADD  R20,R30
000265 c198      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000266 362c      	CPI  R18,108
000267 f419      	BRNE _0x200004D
000268 6002      	ORI  R16,LOW(2)
000269 e015      	LDI  R17,LOW(5)
00026a c193      	RJMP _0x2000035
                 _0x200004D:
00026b c003      	RJMP _0x200004E
                 _0x2000049:
00026c 30e5      	CPI  R30,LOW(0x5)
00026d f009      	BREQ PC+2
00026e c18f      	RJMP _0x2000035
                 _0x200004E:
00026f 2fe2      	MOV  R30,R18
000270 36e3      	CPI  R30,LOW(0x63)
000271 f459      	BRNE _0x2000053
000272 940e 0648 	CALL SUBOPT_0xF
000274 940e 064f 	CALL SUBOPT_0x10
000276 940e 0648 	CALL SUBOPT_0xF
000278 81a4      	LDD  R26,Z+4
000279 93aa      	ST   -Y,R26
00027a 940e 0656 	CALL SUBOPT_0x11
00027c c180      	RJMP _0x2000054
                 _0x2000053:
00027d 34e5      	CPI  R30,LOW(0x45)
00027e f011      	BREQ _0x2000057
00027f 36e5      	CPI  R30,LOW(0x65)
000280 f409      	BRNE _0x2000058
                 _0x2000057:
000281 c003      	RJMP _0x2000059
                 _0x2000058:
000282 36e6      	CPI  R30,LOW(0x66)
000283 f009      	BREQ PC+2
000284 c048      	RJMP _0x200005A
                 _0x2000059:
000285 01fe      	MOVW R30,R28
000286 9676      	ADIW R30,22
000287 87ee      	STD  Y+14,R30
000288 87ff      	STD  Y+14+1,R31
000289 940e 065c 	CALL SUBOPT_0x12
00028b 940e 08fc 	CALL __GETD1P
00028d 940e 0663 	CALL SUBOPT_0x13
00028f 940e 0668 	CALL SUBOPT_0x14
000291 85ad      	LDD  R26,Y+13
000292 23aa      	TST  R26
000293 f032      	BRMI _0x200005B
000294 89ad      	LDD  R26,Y+21
000295 32ab      	CPI  R26,LOW(0x2B)
000296 f059      	BREQ _0x200005D
000297 32a0      	CPI  R26,LOW(0x20)
000298 f081      	BREQ _0x200005F
000299 c017      	RJMP _0x2000060
                 _0x200005B:
00029a 940e 066a 	CALL SUBOPT_0x15
00029c 940e 06e4 	CALL __ANEGF1
00029e 940e 0663 	CALL SUBOPT_0x13
0002a0 e2ed      	LDI  R30,LOW(45)
0002a1 8bed      	STD  Y+21,R30
                 _0x200005D:
0002a2 ff07      	SBRS R16,7
0002a3 c005      	RJMP _0x2000061
0002a4 89ed      	LDD  R30,Y+21
0002a5 93ea      	ST   -Y,R30
0002a6 940e 0656 	CALL SUBOPT_0x11
0002a8 c008      	RJMP _0x2000062
                 _0x2000061:
                 _0x200005F:
0002a9 85ee      	LDD  R30,Y+14
0002aa 85ff      	LDD  R31,Y+14+1
0002ab 9631      	ADIW R30,1
0002ac 87ee      	STD  Y+14,R30
0002ad 87ff      	STD  Y+14+1,R31
0002ae 9731      	SBIW R30,1
0002af 89ad      	LDD  R26,Y+21
0002b0 83a0      	STD  Z+0,R26
                 _0x2000062:
                 _0x2000060:
0002b1 ff05      	SBRS R16,5
0002b2 e046      	LDI  R20,LOW(6)
0002b3 3626      	CPI  R18,102
0002b4 f451      	BRNE _0x2000064
0002b5 940e 066a 	CALL SUBOPT_0x15
0002b7 940e 0911 	CALL __PUTPARD1
0002b9 934a      	ST   -Y,R20
0002ba 89ab      	LDD  R26,Y+19
0002bb 89bc      	LDD  R27,Y+19+1
0002bc 940e 0537 	CALL _ftoa
0002be c009      	RJMP _0x2000065
                 _0x2000064:
0002bf 940e 066a 	CALL SUBOPT_0x15
0002c1 940e 0911 	CALL __PUTPARD1
0002c3 934a      	ST   -Y,R20
0002c4 932a      	ST   -Y,R18
0002c5 89ac      	LDD  R26,Y+20
0002c6 89bd      	LDD  R27,Y+20+1
0002c7 de54      	RCALL __ftoe_G100
                 _0x2000065:
0002c8 01fe      	MOVW R30,R28
0002c9 9676      	ADIW R30,22
0002ca 940e 066f 	CALL SUBOPT_0x16
0002cc c01e      	RJMP _0x2000066
                 _0x200005A:
0002cd 37e3      	CPI  R30,LOW(0x73)
0002ce f439      	BRNE _0x2000068
0002cf 940e 0668 	CALL SUBOPT_0x14
0002d1 940e 0677 	CALL SUBOPT_0x17
0002d3 940e 066f 	CALL SUBOPT_0x16
0002d5 c00e      	RJMP _0x2000069
                 _0x2000068:
0002d6 37e0      	CPI  R30,LOW(0x70)
0002d7 f4c1      	BRNE _0x200006B
0002d8 940e 0668 	CALL SUBOPT_0x14
0002da 940e 0677 	CALL SUBOPT_0x17
0002dc 87ee      	STD  Y+14,R30
0002dd 87ff      	STD  Y+14+1,R31
0002de 85ae      	LDD  R26,Y+14
0002df 85bf      	LDD  R27,Y+14+1
0002e0 940e 04e2 	CALL _strlenf
0002e2 2f1e      	MOV  R17,R30
0002e3 6008      	ORI  R16,LOW(8)
                 _0x2000069:
0002e4 770f      	ANDI R16,LOW(127)
0002e5 3040      	CPI  R20,0
0002e6 f011      	BREQ _0x200006D
0002e7 1741      	CP   R20,R17
0002e8 f008      	BRLO _0x200006E
                 _0x200006D:
0002e9 c001      	RJMP _0x200006C
                 _0x200006E:
0002ea 2f14      	MOV  R17,R20
                 _0x200006C:
                 _0x2000066:
0002eb e040      	LDI  R20,LOW(0)
0002ec e0e0      	LDI  R30,LOW(0)
0002ed 8bec      	STD  Y+20,R30
0002ee e030      	LDI  R19,LOW(0)
0002ef c06d      	RJMP _0x200006F
                 _0x200006B:
0002f0 36e4      	CPI  R30,LOW(0x64)
0002f1 f011      	BREQ _0x2000072
0002f2 36e9      	CPI  R30,LOW(0x69)
0002f3 f411      	BRNE _0x2000073
                 _0x2000072:
0002f4 6004      	ORI  R16,LOW(4)
0002f5 c002      	RJMP _0x2000074
                 _0x2000073:
0002f6 37e5      	CPI  R30,LOW(0x75)
0002f7 f4a1      	BRNE _0x2000075
                 _0x2000074:
0002f8 e0ea      	LDI  R30,LOW(10)
0002f9 8bec      	STD  Y+20,R30
0002fa ff01      	SBRS R16,1
0002fb c008      	RJMP _0x2000076
                +
0002fc e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0002fd ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0002fe e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0002ff e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000300 940e 067c 	CALL SUBOPT_0x18
000302 e01a      	LDI  R17,LOW(10)
000303 c022      	RJMP _0x2000077
                 _0x2000076:
                +
000304 e1e0     +LDI R30 , LOW ( 0x2710 )
000305 e2f7     +LDI R31 , HIGH ( 0x2710 )
000306 e060     +LDI R22 , BYTE3 ( 0x2710 )
000307 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000308 940e 067c 	CALL SUBOPT_0x18
00030a e015      	LDI  R17,LOW(5)
00030b c01a      	RJMP _0x2000077
                 _0x2000075:
00030c 35e8      	CPI  R30,LOW(0x58)
00030d f411      	BRNE _0x2000079
00030e 6008      	ORI  R16,LOW(8)
00030f c003      	RJMP _0x200007A
                 _0x2000079:
000310 37e8      	CPI  R30,LOW(0x78)
000311 f009      	BREQ PC+2
000312 c0ea      	RJMP _0x20000B8
                 _0x200007A:
000313 e1e0      	LDI  R30,LOW(16)
000314 8bec      	STD  Y+20,R30
000315 ff01      	SBRS R16,1
000316 c008      	RJMP _0x200007C
                +
000317 e0e0     +LDI R30 , LOW ( 0x10000000 )
000318 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000319 e060     +LDI R22 , BYTE3 ( 0x10000000 )
00031a e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00031b 940e 067c 	CALL SUBOPT_0x18
00031d e018      	LDI  R17,LOW(8)
00031e c007      	RJMP _0x2000077
                 _0x200007C:
                +
00031f e0e0     +LDI R30 , LOW ( 0x1000 )
000320 e1f0     +LDI R31 , HIGH ( 0x1000 )
000321 e060     +LDI R22 , BYTE3 ( 0x1000 )
000322 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000323 940e 067c 	CALL SUBOPT_0x18
000325 e014      	LDI  R17,LOW(4)
                 _0x2000077:
000326 3040      	CPI  R20,0
000327 f011      	BREQ _0x200007D
000328 770f      	ANDI R16,LOW(127)
000329 c001      	RJMP _0x200007E
                 _0x200007D:
00032a e041      	LDI  R20,LOW(1)
                 _0x200007E:
00032b ff01      	SBRS R16,1
00032c c008      	RJMP _0x200007F
00032d 940e 0668 	CALL SUBOPT_0x14
00032f 940e 065c 	CALL SUBOPT_0x12
000331 9614      	ADIW R26,4
000332 940e 08fc 	CALL __GETD1P
000334 c00f      	RJMP _0x2000115
                 _0x200007F:
000335 ff02      	SBRS R16,2
000336 c007      	RJMP _0x2000081
000337 940e 0668 	CALL SUBOPT_0x14
000339 940e 0677 	CALL SUBOPT_0x17
00033b 940e 089f 	CALL __CWD1
00033d c006      	RJMP _0x2000115
                 _0x2000081:
00033e 940e 0668 	CALL SUBOPT_0x14
000340 940e 0677 	CALL SUBOPT_0x17
000342 2766      	CLR  R22
000343 2777      	CLR  R23
                 _0x2000115:
                +
000344 87ea     +STD Y + 10 , R30
000345 87fb     +STD Y + 10 + 1 , R31
000346 876c     +STD Y + 10 + 2 , R22
000347 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000348 ff02      	SBRS R16,2
000349 c012      	RJMP _0x2000083
00034a 85ad      	LDD  R26,Y+13
00034b 23aa      	TST  R26
00034c f442      	BRPL _0x2000084
00034d 940e 066a 	CALL SUBOPT_0x15
00034f 940e 0891 	CALL __ANEGD1
000351 940e 0663 	CALL SUBOPT_0x13
000353 e2ed      	LDI  R30,LOW(45)
000354 8bed      	STD  Y+21,R30
                 _0x2000084:
000355 89ed      	LDD  R30,Y+21
000356 30e0      	CPI  R30,0
000357 f019      	BREQ _0x2000085
000358 5f1f      	SUBI R17,-LOW(1)
000359 5f4f      	SUBI R20,-LOW(1)
00035a c001      	RJMP _0x2000086
                 _0x2000085:
00035b 7f0b      	ANDI R16,LOW(251)
                 _0x2000086:
                 _0x2000083:
00035c 2f34      	MOV  R19,R20
                 _0x200006F:
00035d fd00      	SBRC R16,0
00035e c014      	RJMP _0x2000087
                 _0x2000088:
00035f 1715      	CP   R17,R21
000360 f410      	BRSH _0x200008B
000361 1735      	CP   R19,R21
000362 f008      	BRLO _0x200008C
                 _0x200008B:
000363 c00f      	RJMP _0x200008A
                 _0x200008C:
000364 ff07      	SBRS R16,7
000365 c008      	RJMP _0x200008D
000366 ff02      	SBRS R16,2
000367 c004      	RJMP _0x200008E
000368 7f0b      	ANDI R16,LOW(251)
000369 892d      	LDD  R18,Y+21
00036a 5011      	SUBI R17,LOW(1)
00036b c001      	RJMP _0x200008F
                 _0x200008E:
00036c e320      	LDI  R18,LOW(48)
                 _0x200008F:
00036d c001      	RJMP _0x2000090
                 _0x200008D:
00036e e220      	LDI  R18,LOW(32)
                 _0x2000090:
00036f 940e 0641 	CALL SUBOPT_0xE
000371 5051      	SUBI R21,LOW(1)
000372 cfec      	RJMP _0x2000088
                 _0x200008A:
                 _0x2000087:
                 _0x2000091:
000373 1714      	CP   R17,R20
000374 f490      	BRSH _0x2000093
000375 6100      	ORI  R16,LOW(16)
000376 ff02      	SBRS R16,2
000377 c006      	RJMP _0x2000094
000378 940e 0681 	CALL SUBOPT_0x19
00037a f009      	BREQ _0x2000095
00037b 5051      	SUBI R21,LOW(1)
                 _0x2000095:
00037c 5011      	SUBI R17,LOW(1)
00037d 5041      	SUBI R20,LOW(1)
                 _0x2000094:
00037e e3e0      	LDI  R30,LOW(48)
00037f 93ea      	ST   -Y,R30
000380 940e 0656 	CALL SUBOPT_0x11
000382 3050      	CPI  R21,0
000383 f009      	BREQ _0x2000096
000384 5051      	SUBI R21,LOW(1)
                 _0x2000096:
000385 5041      	SUBI R20,LOW(1)
000386 cfec      	RJMP _0x2000091
                 _0x2000093:
000387 2f31      	MOV  R19,R17
000388 89ec      	LDD  R30,Y+20
000389 30e0      	CPI  R30,0
00038a f4b9      	BRNE _0x2000097
                 _0x2000098:
00038b 3030      	CPI  R19,0
00038c f0a1      	BREQ _0x200009A
00038d ff03      	SBRS R16,3
00038e c006      	RJMP _0x200009B
00038f 85ee      	LDD  R30,Y+14
000390 85ff      	LDD  R31,Y+14+1
000391 9125      	LPM  R18,Z+
000392 87ee      	STD  Y+14,R30
000393 87ff      	STD  Y+14+1,R31
000394 c005      	RJMP _0x200009C
                 _0x200009B:
000395 85ae      	LDD  R26,Y+14
000396 85bf      	LDD  R27,Y+14+1
000397 912d      	LD   R18,X+
000398 87ae      	STD  Y+14,R26
000399 87bf      	STD  Y+14+1,R27
                 _0x200009C:
00039a 940e 0641 	CALL SUBOPT_0xE
00039c 3050      	CPI  R21,0
00039d f009      	BREQ _0x200009D
00039e 5051      	SUBI R21,LOW(1)
                 _0x200009D:
00039f 5031      	SUBI R19,LOW(1)
0003a0 cfea      	RJMP _0x2000098
                 _0x200009A:
0003a1 c051      	RJMP _0x200009E
                 _0x2000097:
                 _0x20000A0:
0003a2 940e 0693 	CALL SUBOPT_0x1A
0003a4 940e 08b7 	CALL __DIVD21U
0003a6 2f2e      	MOV  R18,R30
0003a7 302a      	CPI  R18,10
0003a8 f030      	BRLO _0x20000A2
0003a9 ff03      	SBRS R16,3
0003aa c002      	RJMP _0x20000A3
0003ab 5c29      	SUBI R18,-LOW(55)
0003ac c001      	RJMP _0x20000A4
                 _0x20000A3:
0003ad 5a29      	SUBI R18,-LOW(87)
                 _0x20000A4:
0003ae c001      	RJMP _0x20000A5
                 _0x20000A2:
0003af 5d20      	SUBI R18,-LOW(48)
                 _0x20000A5:
0003b0 fd04      	SBRC R16,4
0003b1 c021      	RJMP _0x20000A7
0003b2 3321      	CPI  R18,49
0003b3 f460      	BRSH _0x20000A9
                +
0003b4 89a8     +LDD R26 , Y + 16
0003b5 89b9     +LDD R27 , Y + 16 + 1
0003b6 898a     +LDD R24 , Y + 16 + 2
0003b7 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0003b8 30a1     +CPI R26 , LOW ( 0x1 )
0003b9 e0e0     +LDI R30 , HIGH ( 0x1 )
0003ba 07be     +CPC R27 , R30
0003bb e0e0     +LDI R30 , BYTE3 ( 0x1 )
0003bc 078e     +CPC R24 , R30
0003bd e0e0     +LDI R30 , BYTE4 ( 0x1 )
0003be 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0003bf f409      	BRNE _0x20000A8
                 _0x20000A9:
0003c0 c00b      	RJMP _0x20000AB
                 _0x20000A8:
0003c1 1743      	CP   R20,R19
0003c2 f440      	BRSH _0x2000116
0003c3 1753      	CP   R21,R19
0003c4 f010      	BRLO _0x20000AE
0003c5 ff00      	SBRS R16,0
0003c6 c001      	RJMP _0x20000AF
                 _0x20000AE:
0003c7 c010      	RJMP _0x20000AD
                 _0x20000AF:
0003c8 e220      	LDI  R18,LOW(32)
0003c9 ff07      	SBRS R16,7
0003ca c008      	RJMP _0x20000B0
                 _0x2000116:
0003cb e320      	LDI  R18,LOW(48)
                 _0x20000AB:
0003cc 6100      	ORI  R16,LOW(16)
0003cd ff02      	SBRS R16,2
0003ce c004      	RJMP _0x20000B1
0003cf 940e 0681 	CALL SUBOPT_0x19
0003d1 f009      	BREQ _0x20000B2
0003d2 5051      	SUBI R21,LOW(1)
                 _0x20000B2:
                 _0x20000B1:
                 _0x20000B0:
                 _0x20000A7:
0003d3 940e 0641 	CALL SUBOPT_0xE
0003d5 3050      	CPI  R21,0
0003d6 f009      	BREQ _0x20000B3
0003d7 5051      	SUBI R21,LOW(1)
                 _0x20000B3:
                 _0x20000AD:
0003d8 5031      	SUBI R19,LOW(1)
0003d9 940e 0693 	CALL SUBOPT_0x1A
0003db 940e 08e8 	CALL __MODD21U
0003dd 940e 0663 	CALL SUBOPT_0x13
0003df 89ec      	LDD  R30,Y+20
                +
0003e0 89a8     +LDD R26 , Y + 16
0003e1 89b9     +LDD R27 , Y + 16 + 1
0003e2 898a     +LDD R24 , Y + 16 + 2
0003e3 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0003e4 27ff      	CLR  R31
0003e5 2766      	CLR  R22
0003e6 2777      	CLR  R23
0003e7 940e 08b7 	CALL __DIVD21U
0003e9 940e 067c 	CALL SUBOPT_0x18
                +
0003eb 89e8     +LDD R30 , Y + 16
0003ec 89f9     +LDD R31 , Y + 16 + 1
0003ed 896a     +LDD R22 , Y + 16 + 2
0003ee 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0003ef 940e 0928 	CALL __CPD10
0003f1 f009      	BREQ _0x20000A1
0003f2 cfaf      	RJMP _0x20000A0
                 _0x20000A1:
                 _0x200009E:
0003f3 ff00      	SBRS R16,0
0003f4 c008      	RJMP _0x20000B4
                 _0x20000B5:
0003f5 3050      	CPI  R21,0
0003f6 f031      	BREQ _0x20000B7
0003f7 5051      	SUBI R21,LOW(1)
0003f8 e2e0      	LDI  R30,LOW(32)
0003f9 93ea      	ST   -Y,R30
0003fa 940e 0656 	CALL SUBOPT_0x11
0003fc cff8      	RJMP _0x20000B5
                 _0x20000B7:
                 _0x20000B4:
                 _0x20000B8:
                 _0x2000054:
                 _0x2000114:
0003fd e010      	LDI  R17,LOW(0)
                 _0x2000035:
0003fe ce0c      	RJMP _0x2000030
                 _0x2000032:
0003ff 81ae      	LDD  R26,Y+6
000400 81bf      	LDD  R27,Y+6+1
000401 940e 08f8 	CALL __GETW1P
000403 940e 0933 	CALL __LOADLOCR6
000405 96ef      	ADIW R28,63
000406 966f      	ADIW R28,31
000407 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000408 92ff      	PUSH R15
000409 2ef8      	MOV  R15,R24
00040a 9726      	SBIW R28,6
00040b 940e 092e 	CALL __SAVELOCR4
00040d 940e 069c 	CALL SUBOPT_0x1B
00040f 9730      	SBIW R30,0
000410 f419      	BRNE _0x20000B9
000411 efef      	LDI  R30,LOW(65535)
000412 efff      	LDI  R31,HIGH(65535)
000413 c023      	RJMP _0x20C0005
                 _0x20000B9:
000414 01de      	MOVW R26,R28
000415 9616      	ADIW R26,6
000416 940e 088d 	CALL __ADDW2R15
000418 018d      	MOVW R16,R26
000419 940e 069c 	CALL SUBOPT_0x1B
00041b 83ee      	STD  Y+6,R30
00041c 83ff      	STD  Y+6+1,R31
00041d e0e0      	LDI  R30,LOW(0)
00041e 87e8      	STD  Y+8,R30
00041f 87e9      	STD  Y+8+1,R30
000420 01de      	MOVW R26,R28
000421 961a      	ADIW R26,10
000422 940e 088d 	CALL __ADDW2R15
000424 940e 08f8 	CALL __GETW1P
000426 93fa      	ST   -Y,R31
000427 93ea      	ST   -Y,R30
000428 931a      	ST   -Y,R17
000429 930a      	ST   -Y,R16
00042a eee2      	LDI  R30,LOW(_put_buff_G100)
00042b e0f0      	LDI  R31,HIGH(_put_buff_G100)
00042c 93fa      	ST   -Y,R31
00042d 93ea      	ST   -Y,R30
00042e 01de      	MOVW R26,R28
00042f 961a      	ADIW R26,10
000430 ddbd      	RCALL __print_G100
000431 019f      	MOVW R18,R30
000432 81ae      	LDD  R26,Y+6
000433 81bf      	LDD  R27,Y+6+1
000434 e0e0      	LDI  R30,LOW(0)
000435 93ec      	ST   X,R30
000436 01f9      	MOVW R30,R18
                 _0x20C0005:
000437 940e 0935 	CALL __LOADLOCR4
000439 962a      	ADIW R28,10
00043a 90ff      	POP  R15
00043b 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
00043c 93aa      	ST   -Y,R26
00043d b3e8      	IN   R30,0x18
00043e 70ef      	ANDI R30,LOW(0xF)
00043f 2fae      	MOV  R26,R30
000440 81e8      	LD   R30,Y
000441 7fe0      	ANDI R30,LOW(0xF0)
000442 2bea      	OR   R30,R26
000443 bbe8      	OUT  0x18,R30
                +
000444 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000445 958a     +DEC R24
000446 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000447 9ac1      	SBI  0x18,1
                +
000448 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000449 958a     +DEC R24
00044a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00044b 98c1      	CBI  0x18,1
                +
00044c e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00044d 958a     +DEC R24
00044e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00044f c077      	RJMP _0x20C0004
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000450 93aa      	ST   -Y,R26
000451 81a8      	LD   R26,Y
000452 dfe9      	RCALL __lcd_write_nibble_G101
000453 81e8          ld    r30,y
000454 95e2          swap  r30
000455 83e8          st    y,r30
000456 81a8      	LD   R26,Y
000457 dfe4      	RCALL __lcd_write_nibble_G101
                +
000458 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000459 958a     +DEC R24
00045a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
00045b c06b      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00045c 93aa      	ST   -Y,R26
00045d 81e8      	LD   R30,Y
00045e e0f0      	LDI  R31,0
00045f 57eb      	SUBI R30,LOW(-__base_y_G101)
000460 4ffd      	SBCI R31,HIGH(-__base_y_G101)
000461 81e0      	LD   R30,Z
000462 81a9      	LDD  R26,Y+1
000463 0fae      	ADD  R26,R30
000464 dfeb      	RCALL __lcd_write_data
000465 8059      	LDD  R5,Y+1
000466 8048      	LDD  R4,Y+0
000467 9622      	ADIW R28,2
000468 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000469 e0a2      	LDI  R26,LOW(2)
00046a 940e 06a3 	CALL SUBOPT_0x1C
00046c e0ac      	LDI  R26,LOW(12)
00046d dfe2      	RCALL __lcd_write_data
00046e e0a1      	LDI  R26,LOW(1)
00046f 940e 06a3 	CALL SUBOPT_0x1C
000471 e0e0      	LDI  R30,LOW(0)
000472 2e4e      	MOV  R4,R30
000473 2e5e      	MOV  R5,R30
000474 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000475 93aa      	ST   -Y,R26
000476 81a8      	LD   R26,Y
000477 30aa      	CPI  R26,LOW(0xA)
000478 f011      	BREQ _0x2020005
000479 1457      	CP   R5,R7
00047a f048      	BRLO _0x2020004
                 _0x2020005:
00047b e0e0      	LDI  R30,LOW(0)
00047c 93ea      	ST   -Y,R30
00047d 9443      	INC  R4
00047e 2da4      	MOV  R26,R4
00047f dfdc      	RCALL _lcd_gotoxy
000480 81a8      	LD   R26,Y
000481 30aa      	CPI  R26,LOW(0xA)
000482 f409      	BRNE _0x2020007
000483 c043      	RJMP _0x20C0004
                 _0x2020007:
                 _0x2020004:
000484 9453      	INC  R5
000485 9ac0      	SBI  0x18,0
000486 81a8      	LD   R26,Y
000487 dfc8      	RCALL __lcd_write_data
000488 98c0      	CBI  0x18,0
000489 c03d      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00048a 93ba      	ST   -Y,R27
00048b 93aa      	ST   -Y,R26
00048c 931a      	ST   -Y,R17
                 _0x2020008:
00048d 81a9      	LDD  R26,Y+1
00048e 81ba      	LDD  R27,Y+1+1
00048f 91ed      	LD   R30,X+
000490 83a9      	STD  Y+1,R26
000491 83ba      	STD  Y+1+1,R27
000492 2f1e      	MOV  R17,R30
000493 30e0      	CPI  R30,0
000494 f019      	BREQ _0x202000A
000495 2fa1      	MOV  R26,R17
000496 dfde      	RCALL _lcd_putchar
000497 cff5      	RJMP _0x2020008
                 _0x202000A:
000498 8118      	LDD  R17,Y+0
000499 9623      	ADIW R28,3
00049a 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00049b 93aa      	ST   -Y,R26
00049c b3e7      	IN   R30,0x17
00049d 6fe0      	ORI  R30,LOW(0xF0)
00049e bbe7      	OUT  0x17,R30
00049f 9ab9      	SBI  0x17,1
0004a0 9ab8      	SBI  0x17,0
0004a1 9aba      	SBI  0x17,2
0004a2 98c1      	CBI  0x18,1
0004a3 98c0      	CBI  0x18,0
0004a4 98c2      	CBI  0x18,2
0004a5 8078      	LDD  R7,Y+0
0004a6 81e8      	LD   R30,Y
0004a7 58e0      	SUBI R30,-LOW(128)
                +
0004a8 93e0 0287+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0004aa 81e8      	LD   R30,Y
0004ab 54e0      	SUBI R30,-LOW(192)
                +
0004ac 93e0 0288+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
0004ae e1a4      	LDI  R26,LOW(20)
0004af e0b0      	LDI  R27,0
0004b0 940e 06da 	CALL _delay_ms
0004b2 940e 06a9 	CALL SUBOPT_0x1D
0004b4 940e 06a9 	CALL SUBOPT_0x1D
0004b6 940e 06a9 	CALL SUBOPT_0x1D
0004b8 e2a0      	LDI  R26,LOW(32)
0004b9 df82      	RCALL __lcd_write_nibble_G101
                +
0004ba ec88     +LDI R24 , LOW ( 200 )
0004bb e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0004bc 9701     +SBIW R24 , 1
0004bd f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0004be e2a8      	LDI  R26,LOW(40)
0004bf df90      	RCALL __lcd_write_data
0004c0 e0a4      	LDI  R26,LOW(4)
0004c1 df8e      	RCALL __lcd_write_data
0004c2 e8a5      	LDI  R26,LOW(133)
0004c3 df8c      	RCALL __lcd_write_data
0004c4 e0a6      	LDI  R26,LOW(6)
0004c5 df8a      	RCALL __lcd_write_data
0004c6 dfa2      	RCALL _lcd_clear
                 _0x20C0004:
0004c7 9621      	ADIW R28,1
0004c8 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0004c9 93ba      	ST   -Y,R27
0004ca 93aa      	ST   -Y,R26
0004cb 91e9          ld   r30,y+
0004cc 91f9          ld   r31,y+
0004cd 91a9          ld   r26,y+
0004ce 91b9          ld   r27,y+
0004cf 01cd          movw r24,r26
                 strcpyf0:
0004d0 9005      	lpm  r0,z+
0004d1 920d          st   x+,r0
0004d2 2000          tst  r0
0004d3 f7e1          brne strcpyf0
0004d4 01fc          movw r30,r24
0004d5 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0004d6 93ba      	ST   -Y,R27
0004d7 93aa      	ST   -Y,R26
0004d8 91a9          ld   r26,y+
0004d9 91b9          ld   r27,y+
0004da 27ee          clr  r30
0004db 27ff          clr  r31
                 strlen0:
0004dc 916d          ld   r22,x+
0004dd 2366          tst  r22
0004de f011          breq strlen1
0004df 9631          adiw r30,1
0004e0 cffb          rjmp strlen0
                 strlen1:
0004e1 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0004e2 93ba      	ST   -Y,R27
0004e3 93aa      	ST   -Y,R26
0004e4 27aa          clr  r26
0004e5 27bb          clr  r27
0004e6 91e9          ld   r30,y+
0004e7 91f9          ld   r31,y+
                 strlenf0:
0004e8 9005      	lpm  r0,z+
0004e9 2000          tst  r0
0004ea f011          breq strlenf1
0004eb 9611          adiw r26,1
0004ec cffb          rjmp strlenf0
                 strlenf1:
0004ed 01fd          movw r30,r26
0004ee 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0004ef 940e 0916 	CALL __PUTPARD2
0004f1 817b         ldd  r23,y+3
0004f2 816a         ldd  r22,y+2
0004f3 81f9         ldd  r31,y+1
0004f4 81e8         ld   r30,y
0004f5 fb77         bst  r23,7
0004f6 0f77         lsl  r23
0004f7 fd67         sbrc r22,7
0004f8 6071         sbr  r23,1
0004f9 2f97         mov  r25,r23
0004fa 579e         subi r25,0x7e
0004fb f081         breq __ftrunc0
0004fc f078         brcs __ftrunc0
0004fd 3198         cpi  r25,24
0004fe f490         brsh __ftrunc1
0004ff 27aa         clr  r26
000500 27bb         clr  r27
000501 2788         clr  r24
                 __ftrunc2:
000502 9408         sec
000503 9587         ror  r24
000504 95b7         ror  r27
000505 95a7         ror  r26
000506 959a         dec  r25
000507 f7d1         brne __ftrunc2
000508 23ea         and  r30,r26
000509 23fb         and  r31,r27
00050a 2368         and  r22,r24
00050b c005         rjmp __ftrunc1
                 __ftrunc0:
00050c 94e8         clt
00050d 2777         clr  r23
00050e 27ee         clr  r30
00050f 27ff         clr  r31
000510 2766         clr  r22
                 __ftrunc1:
000511 776f         cbr  r22,0x80
000512 9576         lsr  r23
000513 f408         brcc __ftrunc3
000514 6860         sbr  r22,0x80
                 __ftrunc3:
000515 f977         bld  r23,7
000516 91a9         ld   r26,y+
000517 91b9         ld   r27,y+
000518 9189         ld   r24,y+
000519 9199         ld   r25,y+
00051a 17ea         cp   r30,r26
00051b 07fb         cpc  r31,r27
00051c 0768         cpc  r22,r24
00051d 0779         cpc  r23,r25
00051e fb97         bst  r25,7
00051f 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000520 940e 0916 	CALL __PUTPARD2
000522 940e 0907 	CALL __GETD2S0
000524 940e 04ef 	CALL _ftrunc
000526 940e 090c 	CALL __PUTD1S0
000528 f419          brne __floor1
                 __floor0:
000529 940e 0902 	CALL __GETD1S0
00052b c009      	RJMP _0x20C0003
                 __floor1:
00052c f7e6          brtc __floor0
00052d 940e 0902 	CALL __GETD1S0
                +
00052f e0a0     +LDI R26 , LOW ( 0x3F800000 )
000530 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000531 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000532 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000533 940e 0783 	CALL __SUBF12
                 _0x20C0003:
000535 9624      	ADIW R28,4
000536 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000537 d0a6      	RCALL SUBOPT_0x1
000538 e0e0      	LDI  R30,LOW(0)
000539 83ea      	STD  Y+2,R30
00053a e3ef      	LDI  R30,LOW(63)
00053b 83eb      	STD  Y+3,R30
00053c 931a      	ST   -Y,R17
00053d 930a      	ST   -Y,R16
00053e 85eb      	LDD  R30,Y+11
00053f 85fc      	LDD  R31,Y+11+1
000540 3fef      	CPI  R30,LOW(0xFFFF)
000541 efaf      	LDI  R26,HIGH(0xFFFF)
000542 07fa      	CPC  R31,R26
000543 f431      	BRNE _0x20A000D
000544 d16c      	RCALL SUBOPT_0x1E
                +
000545 e7ac     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
000546 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
000547 940e 04c9 	CALL _strcpyf
000549 c08a      	RJMP _0x20C0002
                 _0x20A000D:
00054a 3fef      	CPI  R30,LOW(0x7FFF)
00054b e7af      	LDI  R26,HIGH(0x7FFF)
00054c 07fa      	CPC  R31,R26
00054d f431      	BRNE _0x20A000C
00054e d162      	RCALL SUBOPT_0x1E
                +
00054f e7ad     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000550 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000551 940e 04c9 	CALL _strcpyf
000553 c080      	RJMP _0x20C0002
                 _0x20A000C:
000554 85ac      	LDD  R26,Y+12
000555 23aa      	TST  R26
000556 f452      	BRPL _0x20A000F
                +
000557 85e9     +LDD R30 , Y + 9
000558 85fa     +LDD R31 , Y + 9 + 1
000559 856b     +LDD R22 , Y + 9 + 2
00055a 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00055b 940e 06e4 	CALL __ANEGF1
00055d d158      	RCALL SUBOPT_0x1F
00055e d15c      	RCALL SUBOPT_0x20
00055f e2ed      	LDI  R30,LOW(45)
000560 93ec      	ST   X,R30
                 _0x20A000F:
000561 85a8      	LDD  R26,Y+8
000562 30a7      	CPI  R26,LOW(0x7)
000563 f010      	BRLO _0x20A0010
000564 e0e6      	LDI  R30,LOW(6)
000565 87e8      	STD  Y+8,R30
                 _0x20A0010:
000566 8518      	LDD  R17,Y+8
                 _0x20A0011:
000567 2fe1      	MOV  R30,R17
000568 5011      	SUBI R17,1
000569 30e0      	CPI  R30,0
00056a f021      	BREQ _0x20A0013
00056b d156      	RCALL SUBOPT_0x21
00056c d0b6      	RCALL SUBOPT_0x9
00056d d159      	RCALL SUBOPT_0x22
00056e cff8      	RJMP _0x20A0011
                 _0x20A0013:
00056f d15c      	RCALL SUBOPT_0x23
000570 940e 078a 	CALL __ADDF12
000572 d143      	RCALL SUBOPT_0x1F
000573 e010      	LDI  R17,LOW(0)
                +
000574 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000575 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000576 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000577 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000578 d14e      	RCALL SUBOPT_0x22
                 _0x20A0014:
000579 d152      	RCALL SUBOPT_0x23
00057a 940e 086d 	CALL __CMPF12
00057c f068      	BRLO _0x20A0016
00057d d144      	RCALL SUBOPT_0x21
00057e d091      	RCALL SUBOPT_0x6
00057f d147      	RCALL SUBOPT_0x22
000580 5f1f      	SUBI R17,-LOW(1)
000581 3217      	CPI  R17,39
000582 f030      	BRLO _0x20A0017
000583 d12d      	RCALL SUBOPT_0x1E
                +
000584 e8a1     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000585 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
000586 940e 04c9 	CALL _strcpyf
000588 c04b      	RJMP _0x20C0002
                 _0x20A0017:
000589 cfef      	RJMP _0x20A0014
                 _0x20A0016:
00058a 3010      	CPI  R17,0
00058b f421      	BRNE _0x20A0018
00058c d12e      	RCALL SUBOPT_0x20
00058d e3e0      	LDI  R30,LOW(48)
00058e 93ec      	ST   X,R30
00058f c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000590 2fe1      	MOV  R30,R17
000591 5011      	SUBI R17,1
000592 30e0      	CPI  R30,0
000593 f0e1      	BREQ _0x20A001C
000594 d12d      	RCALL SUBOPT_0x21
000595 d08d      	RCALL SUBOPT_0x9
000596 d085      	RCALL SUBOPT_0x8
000597 01df      	MOVW R26,R30
000598 01cb      	MOVW R24,R22
000599 940e 0520 	CALL _floor
00059b d12b      	RCALL SUBOPT_0x22
00059c d12f      	RCALL SUBOPT_0x23
00059d 940e 0828 	CALL __DIVF21
00059f 940e 0717 	CALL __CFD1U
0005a1 2f0e      	MOV  R16,R30
0005a2 d118      	RCALL SUBOPT_0x20
0005a3 d08d      	RCALL SUBOPT_0xB
0005a4 e0f0      	LDI  R31,0
0005a5 d11c      	RCALL SUBOPT_0x21
0005a6 940e 089f 	CALL __CWD1
0005a8 940e 0750 	CALL __CDF1
0005aa 940e 07da 	CALL __MULF12
0005ac d128      	RCALL SUBOPT_0x24
0005ad d088      	RCALL SUBOPT_0xC
0005ae d107      	RCALL SUBOPT_0x1F
0005af cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
0005b0 85e8      	LDD  R30,Y+8
0005b1 30e0      	CPI  R30,0
0005b2 f0e9      	BREQ _0x20C0001
0005b3 d107      	RCALL SUBOPT_0x20
0005b4 e2ee      	LDI  R30,LOW(46)
0005b5 93ec      	ST   X,R30
                 _0x20A001E:
0005b6 85e8      	LDD  R30,Y+8
0005b7 50e1      	SUBI R30,LOW(1)
0005b8 87e8      	STD  Y+8,R30
0005b9 5fef      	SUBI R30,-LOW(1)
0005ba f0a9      	BREQ _0x20A0020
0005bb d119      	RCALL SUBOPT_0x24
0005bc d053      	RCALL SUBOPT_0x6
0005bd d0f8      	RCALL SUBOPT_0x1F
                +
0005be 85e9     +LDD R30 , Y + 9
0005bf 85fa     +LDD R31 , Y + 9 + 1
0005c0 856b     +LDD R22 , Y + 9 + 2
0005c1 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0005c2 940e 0717 	CALL __CFD1U
0005c4 2f0e      	MOV  R16,R30
0005c5 d0f5      	RCALL SUBOPT_0x20
0005c6 d06a      	RCALL SUBOPT_0xB
0005c7 e0f0      	LDI  R31,0
0005c8 d10c      	RCALL SUBOPT_0x24
0005c9 940e 089f 	CALL __CWD1
0005cb 940e 0750 	CALL __CDF1
0005cd d068      	RCALL SUBOPT_0xC
0005ce d0e7      	RCALL SUBOPT_0x1F
0005cf cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
0005d0 81ae      	LDD  R26,Y+6
0005d1 81bf      	LDD  R27,Y+6+1
0005d2 e0e0      	LDI  R30,LOW(0)
0005d3 93ec      	ST   X,R30
                 _0x20C0002:
0005d4 8119      	LDD  R17,Y+1
0005d5 8108      	LDD  R16,Y+0
0005d6 962d      	ADIW R28,13
0005d7 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _read_temp:
000271           	.BYTE 0x4
                 _temp:
000275           	.BYTE 0x10
                 __base_y_G101:
000285           	.BYTE 0x4
                 __seed_G105:
000289           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
0005d8 91ed      	LD   R30,X+
0005d9 91fd      	LD   R31,X+
0005da 9631      	ADIW R30,1
0005db 93fe      	ST   -X,R31
0005dc 93ee      	ST   -X,R30
0005dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
0005de 93ba      	ST   -Y,R27
0005df 93aa      	ST   -Y,R26
0005e0 9724      	SBIW R28,4
0005e1 e0e0      	LDI  R30,LOW(0)
0005e2 83e8      	ST   Y,R30
0005e3 83e9      	STD  Y+1,R30
0005e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2:
                +
0005e5 81ac     +LDD R26 , Y + 4
0005e6 81bd     +LDD R27 , Y + 4 + 1
0005e7 818e     +LDD R24 , Y + 4 + 2
0005e8 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0005e9 e0e0     +LDI R30 , LOW ( 0x41200000 )
0005ea e0f0     +LDI R31 , HIGH ( 0x41200000 )
0005eb e260     +LDI R22 , BYTE3 ( 0x41200000 )
0005ec e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0005ed 940e 07da 	CALL __MULF12
                +
0005ef 83ec     +STD Y + 4 , R30
0005f0 83fd     +STD Y + 4 + 1 , R31
0005f1 836e     +STD Y + 4 + 2 , R22
0005f2 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0005f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3:
                +
0005f4 81ec     +LDD R30 , Y + 4
0005f5 81fd     +LDD R31 , Y + 4 + 1
0005f6 816e     +LDD R22 , Y + 4 + 2
0005f7 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0005f8 85ac     +LDD R26 , Y + 12
0005f9 85bd     +LDD R27 , Y + 12 + 1
0005fa 858e     +LDD R24 , Y + 12 + 2
0005fb 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0005fc 940e 086d 	CALL __CMPF12
0005fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
                +
0005ff 85ac     +LDD R26 , Y + 12
000600 85bd     +LDD R27 , Y + 12 + 1
000601 858e     +LDD R24 , Y + 12 + 2
000602 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000603 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
                +
000604 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000605 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000606 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000607 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000608 940e 07da 	CALL __MULF12
                +
00060a 87ec     +STD Y + 12 , R30
00060b 87fd     +STD Y + 12 + 1 , R31
00060c 876e     +STD Y + 12 + 2 , R22
00060d 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00060e 5f3f      	SUBI R19,-LOW(1)
00060f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
                +
000610 e0e0     +LDI R30 , LOW ( 0x41200000 )
000611 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000612 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000613 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000614 940e 07da 	CALL __MULF12
000616 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
                +
000617 87ec     +STD Y + 12 , R30
000618 87fd     +STD Y + 12 + 1 , R31
000619 876e     +STD Y + 12 + 2 , R22
00061a 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00061b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
                +
00061c e0a0     +LDI R26 , LOW ( 0x3F000000 )
00061d e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00061e e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00061f e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000620 940e 078a 	CALL __ADDF12
000622 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
                +
000623 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000624 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000625 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000626 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000627 940e 07da 	CALL __MULF12
000629 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
00062a 85a8      	LDD  R26,Y+8
00062b 85b9      	LDD  R27,Y+8+1
00062c 9611      	ADIW R26,1
00062d 87a8      	STD  Y+8,R26
00062e 87b9      	STD  Y+8+1,R27
00062f 9711      	SBIW R26,1
000630 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000631 2fe0      	MOV  R30,R16
000632 5de0      	SUBI R30,-LOW(48)
000633 93ec      	ST   X,R30
000634 2fe0      	MOV  R30,R16
000635 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000636 940e 091b 	CALL __SWAPD12
000638 940e 0783 	CALL __SUBF12
00063a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xD:
00063b 85e8      	LDD  R30,Y+8
00063c 85f9      	LDD  R31,Y+8+1
00063d 9631      	ADIW R30,1
00063e 87e8      	STD  Y+8,R30
00063f 87f9      	STD  Y+8+1,R31
000640 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xE:
000641 932a      	ST   -Y,R18
000642 81af      	LDD  R26,Y+7
000643 85b8      	LDD  R27,Y+7+1
000644 85e9      	LDD  R30,Y+9
000645 85fa      	LDD  R31,Y+9+1
000646 9509      	ICALL
000647 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xF:
                +
000648 01fe     +MOVW R30 , R28
000649 5ae6     +SUBI R30 , LOW ( - 90 )
00064a 4fff     +SBCI R31 , HIGH ( - 90 )
00064b 9001     +LD R0 , Z +
00064c 81f0     +LD R31 , Z
00064d 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00064e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x10:
00064f 9734      	SBIW R30,4
                +
000650 01de     +MOVW R26 , R28
000651 5aa6     +SUBI R26 , LOW ( - 90 )
000652 4fbf     +SBCI R27 , HIGH ( - 90 )
000653 93ed     +ST X + , R30
000654 93fc     +ST X , R31
                 	__PUTW1SX 90
000655 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
000656 81af      	LDD  R26,Y+7
000657 85b8      	LDD  R27,Y+7+1
000658 85e9      	LDD  R30,Y+9
000659 85fa      	LDD  R31,Y+9+1
00065a 9509      	ICALL
00065b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x12:
                +
00065c 01de     +MOVW R26 , R28
00065d 5aa6     +SUBI R26 , LOW ( - 90 )
00065e 4fbf     +SBCI R27 , HIGH ( - 90 )
00065f 900d     +LD R0 , X +
000660 91bc     +LD R27 , X
000661 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000662 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
                +
000663 87ea     +STD Y + 10 , R30
000664 87fb     +STD Y + 10 + 1 , R31
000665 876c     +STD Y + 10 + 2 , R22
000666 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000667 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x14:
000668 dfdf      	RCALL SUBOPT_0xF
000669 cfe5      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
                +
00066a 85ea     +LDD R30 , Y + 10
00066b 85fb     +LDD R31 , Y + 10 + 1
00066c 856c     +LDD R22 , Y + 10 + 2
00066d 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00066e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
00066f 87ee      	STD  Y+14,R30
000670 87ff      	STD  Y+14+1,R31
000671 85ae      	LDD  R26,Y+14
000672 85bf      	LDD  R27,Y+14+1
000673 940e 04d6 	CALL _strlen
000675 2f1e      	MOV  R17,R30
000676 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x17:
000677 dfe4      	RCALL SUBOPT_0x12
000678 9614      	ADIW R26,4
000679 940e 08f8 	CALL __GETW1P
00067b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18:
                +
00067c 8be8     +STD Y + 16 , R30
00067d 8bf9     +STD Y + 16 + 1 , R31
00067e 8b6a     +STD Y + 16 + 2 , R22
00067f 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000680 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x19:
000681 7f0b      	ANDI R16,LOW(251)
000682 89ed      	LDD  R30,Y+21
000683 93ea      	ST   -Y,R30
                +
000684 01de     +MOVW R26 , R28
000685 5aa9     +SUBI R26 , LOW ( - 87 )
000686 4fbf     +SBCI R27 , HIGH ( - 87 )
000687 900d     +LD R0 , X +
000688 91bc     +LD R27 , X
000689 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
00068a 01fe     +MOVW R30 , R28
00068b 5ae7     +SUBI R30 , LOW ( - 89 )
00068c 4fff     +SBCI R31 , HIGH ( - 89 )
00068d 9001     +LD R0 , Z +
00068e 81f0     +LD R31 , Z
00068f 2de0     +MOV R30 , R0
                 	__GETW1SX 89
000690 9509      	ICALL
000691 3050      	CPI  R21,0
000692 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
                +
000693 89e8     +LDD R30 , Y + 16
000694 89f9     +LDD R31 , Y + 16 + 1
000695 896a     +LDD R22 , Y + 16 + 2
000696 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000697 85aa     +LDD R26 , Y + 10
000698 85bb     +LDD R27 , Y + 10 + 1
000699 858c     +LDD R24 , Y + 10 + 2
00069a 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00069b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
00069c 01de      	MOVW R26,R28
00069d 961c      	ADIW R26,12
00069e 940e 088d 	CALL __ADDW2R15
0006a0 940e 08f8 	CALL __GETW1P
0006a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
0006a3 940e 0450 	CALL __lcd_write_data
0006a5 e0a3      	LDI  R26,LOW(3)
0006a6 e0b0      	LDI  R27,0
0006a7 940c 06da 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1D:
0006a9 e3a0      	LDI  R26,LOW(48)
0006aa 940e 043c 	CALL __lcd_write_nibble_G101
                +
0006ac ec88     +LDI R24 , LOW ( 200 )
0006ad e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0006ae 9701     +SBIW R24 , 1
0006af f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0006b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
0006b1 81ee      	LDD  R30,Y+6
0006b2 81ff      	LDD  R31,Y+6+1
0006b3 93fa      	ST   -Y,R31
0006b4 93ea      	ST   -Y,R30
0006b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
                +
0006b6 87e9     +STD Y + 9 , R30
0006b7 87fa     +STD Y + 9 + 1 , R31
0006b8 876b     +STD Y + 9 + 2 , R22
0006b9 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0006ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x20:
0006bb 81ae      	LDD  R26,Y+6
0006bc 81bf      	LDD  R27,Y+6+1
0006bd 9611      	ADIW R26,1
0006be 83ae      	STD  Y+6,R26
0006bf 83bf      	STD  Y+6+1,R27
0006c0 9711      	SBIW R26,1
0006c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21:
                +
0006c2 81aa     +LDD R26 , Y + 2
0006c3 81bb     +LDD R27 , Y + 2 + 1
0006c4 818c     +LDD R24 , Y + 2 + 2
0006c5 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0006c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
0006c7 83ea     +STD Y + 2 , R30
0006c8 83fb     +STD Y + 2 + 1 , R31
0006c9 836c     +STD Y + 2 + 2 , R22
0006ca 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0006cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x23:
                +
0006cc 81ea     +LDD R30 , Y + 2
0006cd 81fb     +LDD R31 , Y + 2 + 1
0006ce 816c     +LDD R22 , Y + 2 + 2
0006cf 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0006d0 85a9     +LDD R26 , Y + 9
0006d1 85ba     +LDD R27 , Y + 9 + 1
0006d2 858b     +LDD R24 , Y + 9 + 2
0006d3 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0006d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
                +
0006d5 85a9     +LDD R26 , Y + 9
0006d6 85ba     +LDD R27 , Y + 9 + 1
0006d7 858b     +LDD R24 , Y + 9 + 2
0006d8 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0006d9 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0006da 9610      	adiw r26,0
0006db f039      	breq __delay_ms1
                 __delay_ms0:
0006dc 95a8      	wdr
                +
0006dd ed80     +LDI R24 , LOW ( 0x7D0 )
0006de e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0006df 9701     +SBIW R24 , 1
0006e0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0006e1 9711      	sbiw r26,1
0006e2 f7c9      	brne __delay_ms0
                 __delay_ms1:
0006e3 9508      	ret
                 
                 __ANEGF1:
0006e4 9730      	SBIW R30,0
0006e5 4060      	SBCI R22,0
0006e6 4070      	SBCI R23,0
0006e7 f009      	BREQ __ANEGF10
0006e8 5870      	SUBI R23,0x80
                 __ANEGF10:
0006e9 9508      	RET
                 
                 __ROUND_REPACK:
0006ea 2355      	TST  R21
0006eb f442      	BRPL __REPACK
0006ec 3850      	CPI  R21,0x80
0006ed f411      	BRNE __ROUND_REPACK0
0006ee ffe0      	SBRS R30,0
0006ef c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0006f0 9631      	ADIW R30,1
0006f1 1f69      	ADC  R22,R25
0006f2 1f79      	ADC  R23,R25
0006f3 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0006f4 e850      	LDI  R21,0x80
0006f5 2757      	EOR  R21,R23
0006f6 f411      	BRNE __REPACK0
0006f7 935f      	PUSH R21
0006f8 c0cf      	RJMP __ZERORES
                 __REPACK0:
0006f9 3f5f      	CPI  R21,0xFF
0006fa f031      	BREQ __REPACK1
0006fb 0f66      	LSL  R22
0006fc 0c00      	LSL  R0
0006fd 9557      	ROR  R21
0006fe 9567      	ROR  R22
0006ff 2f75      	MOV  R23,R21
000700 9508      	RET
                 __REPACK1:
000701 935f      	PUSH R21
000702 2000      	TST  R0
000703 f00a      	BRMI __REPACK2
000704 c0cf      	RJMP __MAXRES
                 __REPACK2:
000705 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000706 e850      	LDI  R21,0x80
000707 2e19      	MOV  R1,R25
000708 2215      	AND  R1,R21
000709 0f88      	LSL  R24
00070a 1f99      	ROL  R25
00070b 2795      	EOR  R25,R21
00070c 0f55      	LSL  R21
00070d 9587      	ROR  R24
                 
                 __UNPACK1:
00070e e850      	LDI  R21,0x80
00070f 2e07      	MOV  R0,R23
000710 2205      	AND  R0,R21
000711 0f66      	LSL  R22
000712 1f77      	ROL  R23
000713 2775      	EOR  R23,R21
000714 0f55      	LSL  R21
000715 9567      	ROR  R22
000716 9508      	RET
                 
                 __CFD1U:
000717 9468      	SET
000718 c001      	RJMP __CFD1U0
                 __CFD1:
000719 94e8      	CLT
                 __CFD1U0:
00071a 935f      	PUSH R21
00071b dff2      	RCALL __UNPACK1
00071c 3870      	CPI  R23,0x80
00071d f018      	BRLO __CFD10
00071e 3f7f      	CPI  R23,0xFF
00071f f408      	BRCC __CFD10
000720 c0a7      	RJMP __ZERORES
                 __CFD10:
000721 e156      	LDI  R21,22
000722 1b57      	SUB  R21,R23
000723 f4aa      	BRPL __CFD11
000724 9551      	NEG  R21
000725 3058      	CPI  R21,8
000726 f40e      	BRTC __CFD19
000727 3059      	CPI  R21,9
                 __CFD19:
000728 f030      	BRLO __CFD17
000729 efef      	SER  R30
00072a efff      	SER  R31
00072b ef6f      	SER  R22
00072c e77f      	LDI  R23,0x7F
00072d f977      	BLD  R23,7
00072e c01a      	RJMP __CFD15
                 __CFD17:
00072f 2777      	CLR  R23
000730 2355      	TST  R21
000731 f0b9      	BREQ __CFD15
                 __CFD18:
000732 0fee      	LSL  R30
000733 1fff      	ROL  R31
000734 1f66      	ROL  R22
000735 1f77      	ROL  R23
000736 955a      	DEC  R21
000737 f7d1      	BRNE __CFD18
000738 c010      	RJMP __CFD15
                 __CFD11:
000739 2777      	CLR  R23
                 __CFD12:
00073a 3058      	CPI  R21,8
00073b f028      	BRLO __CFD13
00073c 2fef      	MOV  R30,R31
00073d 2ff6      	MOV  R31,R22
00073e 2f67      	MOV  R22,R23
00073f 5058      	SUBI R21,8
000740 cff9      	RJMP __CFD12
                 __CFD13:
000741 2355      	TST  R21
000742 f031      	BREQ __CFD15
                 __CFD14:
000743 9576      	LSR  R23
000744 9567      	ROR  R22
000745 95f7      	ROR  R31
000746 95e7      	ROR  R30
000747 955a      	DEC  R21
000748 f7d1      	BRNE __CFD14
                 __CFD15:
000749 2000      	TST  R0
00074a f40a      	BRPL __CFD16
00074b d145      	RCALL __ANEGD1
                 __CFD16:
00074c 915f      	POP  R21
00074d 9508      	RET
                 
                 __CDF1U:
00074e 9468      	SET
00074f c001      	RJMP __CDF1U0
                 __CDF1:
000750 94e8      	CLT
                 __CDF1U0:
000751 9730      	SBIW R30,0
000752 4060      	SBCI R22,0
000753 4070      	SBCI R23,0
000754 f0b1      	BREQ __CDF10
000755 2400      	CLR  R0
000756 f026      	BRTS __CDF11
000757 2377      	TST  R23
000758 f412      	BRPL __CDF11
000759 9400      	COM  R0
00075a d136      	RCALL __ANEGD1
                 __CDF11:
00075b 2e17      	MOV  R1,R23
00075c e17e      	LDI  R23,30
00075d 2011      	TST  R1
                 __CDF12:
00075e f032      	BRMI __CDF13
00075f 957a      	DEC  R23
000760 0fee      	LSL  R30
000761 1fff      	ROL  R31
000762 1f66      	ROL  R22
000763 1c11      	ROL  R1
000764 cff9      	RJMP __CDF12
                 __CDF13:
000765 2fef      	MOV  R30,R31
000766 2ff6      	MOV  R31,R22
000767 2d61      	MOV  R22,R1
000768 935f      	PUSH R21
000769 df8a      	RCALL __REPACK
00076a 915f      	POP  R21
                 __CDF10:
00076b 9508      	RET
                 
                 __SWAPACC:
00076c 934f      	PUSH R20
00076d 01af      	MOVW R20,R30
00076e 01fd      	MOVW R30,R26
00076f 01da      	MOVW R26,R20
000770 01ab      	MOVW R20,R22
000771 01bc      	MOVW R22,R24
000772 01ca      	MOVW R24,R20
000773 2d40      	MOV  R20,R0
000774 2c01      	MOV  R0,R1
000775 2e14      	MOV  R1,R20
000776 914f      	POP  R20
000777 9508      	RET
                 
                 __UADD12:
000778 0fea      	ADD  R30,R26
000779 1ffb      	ADC  R31,R27
00077a 1f68      	ADC  R22,R24
00077b 9508      	RET
                 
                 __NEGMAN1:
00077c 95e0      	COM  R30
00077d 95f0      	COM  R31
00077e 9560      	COM  R22
00077f 5fef      	SUBI R30,-1
000780 4fff      	SBCI R31,-1
000781 4f6f      	SBCI R22,-1
000782 9508      	RET
                 
                 __SUBF12:
000783 935f      	PUSH R21
000784 df81      	RCALL __UNPACK
000785 3890      	CPI  R25,0x80
000786 f171      	BREQ __ADDF129
000787 e850      	LDI  R21,0x80
000788 2615      	EOR  R1,R21
                 
000789 c004      	RJMP __ADDF120
                 
                 __ADDF12:
00078a 935f      	PUSH R21
00078b df7a      	RCALL __UNPACK
00078c 3890      	CPI  R25,0x80
00078d f139      	BREQ __ADDF129
                 
                 __ADDF120:
00078e 3870      	CPI  R23,0x80
00078f f121      	BREQ __ADDF128
                 __ADDF121:
000790 2f57      	MOV  R21,R23
000791 1b59      	SUB  R21,R25
000792 f12b      	BRVS __ADDF1211
000793 f412      	BRPL __ADDF122
000794 dfd7      	RCALL __SWAPACC
000795 cffa      	RJMP __ADDF121
                 __ADDF122:
000796 3158      	CPI  R21,24
000797 f018      	BRLO __ADDF123
000798 27aa      	CLR  R26
000799 27bb      	CLR  R27
00079a 2788      	CLR  R24
                 __ADDF123:
00079b 3058      	CPI  R21,8
00079c f028      	BRLO __ADDF124
00079d 2fab      	MOV  R26,R27
00079e 2fb8      	MOV  R27,R24
00079f 2788      	CLR  R24
0007a0 5058      	SUBI R21,8
0007a1 cff9      	RJMP __ADDF123
                 __ADDF124:
0007a2 2355      	TST  R21
0007a3 f029      	BREQ __ADDF126
                 __ADDF125:
0007a4 9586      	LSR  R24
0007a5 95b7      	ROR  R27
0007a6 95a7      	ROR  R26
0007a7 955a      	DEC  R21
0007a8 f7d9      	BRNE __ADDF125
                 __ADDF126:
0007a9 2d50      	MOV  R21,R0
0007aa 2551      	EOR  R21,R1
0007ab f072      	BRMI __ADDF127
0007ac dfcb      	RCALL __UADD12
0007ad f438      	BRCC __ADDF129
0007ae 9567      	ROR  R22
0007af 95f7      	ROR  R31
0007b0 95e7      	ROR  R30
0007b1 9573      	INC  R23
0007b2 f413      	BRVC __ADDF129
0007b3 c020      	RJMP __MAXRES
                 __ADDF128:
0007b4 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0007b5 df3e      	RCALL __REPACK
0007b6 915f      	POP  R21
0007b7 9508      	RET
                 __ADDF1211:
0007b8 f7d8      	BRCC __ADDF128
0007b9 cffb      	RJMP __ADDF129
                 __ADDF127:
0007ba 1bea      	SUB  R30,R26
0007bb 0bfb      	SBC  R31,R27
0007bc 0b68      	SBC  R22,R24
0007bd f051      	BREQ __ZERORES
0007be f410      	BRCC __ADDF1210
0007bf 9400      	COM  R0
0007c0 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0007c1 2366      	TST  R22
0007c2 f392      	BRMI __ADDF129
0007c3 0fee      	LSL  R30
0007c4 1fff      	ROL  R31
0007c5 1f66      	ROL  R22
0007c6 957a      	DEC  R23
0007c7 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0007c8 27ee      	CLR  R30
0007c9 27ff      	CLR  R31
0007ca 2766      	CLR  R22
0007cb 2777      	CLR  R23
0007cc 915f      	POP  R21
0007cd 9508      	RET
                 
                 __MINRES:
0007ce efef      	SER  R30
0007cf efff      	SER  R31
0007d0 e76f      	LDI  R22,0x7F
0007d1 ef7f      	SER  R23
0007d2 915f      	POP  R21
0007d3 9508      	RET
                 
                 __MAXRES:
0007d4 efef      	SER  R30
0007d5 efff      	SER  R31
0007d6 e76f      	LDI  R22,0x7F
0007d7 e77f      	LDI  R23,0x7F
0007d8 915f      	POP  R21
0007d9 9508      	RET
                 
                 __MULF12:
0007da 935f      	PUSH R21
0007db df2a      	RCALL __UNPACK
0007dc 3870      	CPI  R23,0x80
0007dd f351      	BREQ __ZERORES
0007de 3890      	CPI  R25,0x80
0007df f341      	BREQ __ZERORES
0007e0 2401      	EOR  R0,R1
0007e1 9408      	SEC
0007e2 1f79      	ADC  R23,R25
0007e3 f423      	BRVC __MULF124
0007e4 f31c      	BRLT __ZERORES
                 __MULF125:
0007e5 2000      	TST  R0
0007e6 f33a      	BRMI __MINRES
0007e7 cfec      	RJMP __MAXRES
                 __MULF124:
0007e8 920f      	PUSH R0
0007e9 931f      	PUSH R17
0007ea 932f      	PUSH R18
0007eb 933f      	PUSH R19
0007ec 934f      	PUSH R20
0007ed 2711      	CLR  R17
0007ee 2722      	CLR  R18
0007ef 2799      	CLR  R25
0007f0 9f68      	MUL  R22,R24
0007f1 01a0      	MOVW R20,R0
0007f2 9f8f      	MUL  R24,R31
0007f3 2d30      	MOV  R19,R0
0007f4 0d41      	ADD  R20,R1
0007f5 1f59      	ADC  R21,R25
0007f6 9f6b      	MUL  R22,R27
0007f7 0d30      	ADD  R19,R0
0007f8 1d41      	ADC  R20,R1
0007f9 1f59      	ADC  R21,R25
0007fa 9f8e      	MUL  R24,R30
0007fb d027      	RCALL __MULF126
0007fc 9fbf      	MUL  R27,R31
0007fd d025      	RCALL __MULF126
0007fe 9f6a      	MUL  R22,R26
0007ff d023      	RCALL __MULF126
000800 9fbe      	MUL  R27,R30
000801 d01d      	RCALL __MULF127
000802 9faf      	MUL  R26,R31
000803 d01b      	RCALL __MULF127
000804 9fae      	MUL  R26,R30
000805 0d11      	ADD  R17,R1
000806 1f29      	ADC  R18,R25
000807 1f39      	ADC  R19,R25
000808 1f49      	ADC  R20,R25
000809 1f59      	ADC  R21,R25
00080a 2fe3      	MOV  R30,R19
00080b 2ff4      	MOV  R31,R20
00080c 2f65      	MOV  R22,R21
00080d 2f52      	MOV  R21,R18
00080e 914f      	POP  R20
00080f 913f      	POP  R19
000810 912f      	POP  R18
000811 911f      	POP  R17
000812 900f      	POP  R0
000813 2366      	TST  R22
000814 f02a      	BRMI __MULF122
000815 0f55      	LSL  R21
000816 1fee      	ROL  R30
000817 1fff      	ROL  R31
000818 1f66      	ROL  R22
000819 c002      	RJMP __MULF123
                 __MULF122:
00081a 9573      	INC  R23
00081b f24b      	BRVS __MULF125
                 __MULF123:
00081c decd      	RCALL __ROUND_REPACK
00081d 915f      	POP  R21
00081e 9508      	RET
                 
                 __MULF127:
00081f 0d10      	ADD  R17,R0
000820 1d21      	ADC  R18,R1
000821 1f39      	ADC  R19,R25
000822 c002      	RJMP __MULF128
                 __MULF126:
000823 0d20      	ADD  R18,R0
000824 1d31      	ADC  R19,R1
                 __MULF128:
000825 1f49      	ADC  R20,R25
000826 1f59      	ADC  R21,R25
000827 9508      	RET
                 
                 __DIVF21:
000828 935f      	PUSH R21
000829 dedc      	RCALL __UNPACK
00082a 3870      	CPI  R23,0x80
00082b f421      	BRNE __DIVF210
00082c 2011      	TST  R1
                 __DIVF211:
00082d f40a      	BRPL __DIVF219
00082e cf9f      	RJMP __MINRES
                 __DIVF219:
00082f cfa4      	RJMP __MAXRES
                 __DIVF210:
000830 3890      	CPI  R25,0x80
000831 f409      	BRNE __DIVF218
                 __DIVF217:
000832 cf95      	RJMP __ZERORES
                 __DIVF218:
000833 2401      	EOR  R0,R1
000834 9408      	SEC
000835 0b97      	SBC  R25,R23
000836 f41b      	BRVC __DIVF216
000837 f3d4      	BRLT __DIVF217
000838 2000      	TST  R0
000839 cff3      	RJMP __DIVF211
                 __DIVF216:
00083a 2f79      	MOV  R23,R25
00083b 931f      	PUSH R17
00083c 932f      	PUSH R18
00083d 933f      	PUSH R19
00083e 934f      	PUSH R20
00083f 2411      	CLR  R1
000840 2711      	CLR  R17
000841 2722      	CLR  R18
000842 2733      	CLR  R19
000843 2744      	CLR  R20
000844 2755      	CLR  R21
000845 e290      	LDI  R25,32
                 __DIVF212:
000846 17ae      	CP   R26,R30
000847 07bf      	CPC  R27,R31
000848 0786      	CPC  R24,R22
000849 0741      	CPC  R20,R17
00084a f030      	BRLO __DIVF213
00084b 1bae      	SUB  R26,R30
00084c 0bbf      	SBC  R27,R31
00084d 0b86      	SBC  R24,R22
00084e 0b41      	SBC  R20,R17
00084f 9408      	SEC
000850 c001      	RJMP __DIVF214
                 __DIVF213:
000851 9488      	CLC
                 __DIVF214:
000852 1f55      	ROL  R21
000853 1f22      	ROL  R18
000854 1f33      	ROL  R19
000855 1c11      	ROL  R1
000856 1faa      	ROL  R26
000857 1fbb      	ROL  R27
000858 1f88      	ROL  R24
000859 1f44      	ROL  R20
00085a 959a      	DEC  R25
00085b f751      	BRNE __DIVF212
00085c 01f9      	MOVW R30,R18
00085d 2d61      	MOV  R22,R1
00085e 914f      	POP  R20
00085f 913f      	POP  R19
000860 912f      	POP  R18
000861 911f      	POP  R17
000862 2366      	TST  R22
000863 f032      	BRMI __DIVF215
000864 0f55      	LSL  R21
000865 1fee      	ROL  R30
000866 1fff      	ROL  R31
000867 1f66      	ROL  R22
000868 957a      	DEC  R23
000869 f243      	BRVS __DIVF217
                 __DIVF215:
00086a de7f      	RCALL __ROUND_REPACK
00086b 915f      	POP  R21
00086c 9508      	RET
                 
                 __CMPF12:
00086d 2399      	TST  R25
00086e f09a      	BRMI __CMPF120
00086f 2377      	TST  R23
000870 f042      	BRMI __CMPF121
000871 1797      	CP   R25,R23
000872 f048      	BRLO __CMPF122
000873 f429      	BRNE __CMPF121
000874 17ae      	CP   R26,R30
000875 07bf      	CPC  R27,R31
000876 0786      	CPC  R24,R22
000877 f020      	BRLO __CMPF122
000878 f031      	BREQ __CMPF123
                 __CMPF121:
000879 9498      	CLZ
00087a 9488      	CLC
00087b 9508      	RET
                 __CMPF122:
00087c 9498      	CLZ
00087d 9408      	SEC
00087e 9508      	RET
                 __CMPF123:
00087f 9418      	SEZ
000880 9488      	CLC
000881 9508      	RET
                 __CMPF120:
000882 2377      	TST  R23
000883 f7c2      	BRPL __CMPF122
000884 1797      	CP   R25,R23
000885 f398      	BRLO __CMPF121
000886 f7a9      	BRNE __CMPF122
000887 17ea      	CP   R30,R26
000888 07fb      	CPC  R31,R27
000889 0768      	CPC  R22,R24
00088a f388      	BRLO __CMPF122
00088b f399      	BREQ __CMPF123
00088c cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00088d 2400      	CLR  R0
00088e 0daf      	ADD  R26,R15
00088f 1db0      	ADC  R27,R0
000890 9508      	RET
                 
                 __ANEGD1:
000891 95f0      	COM  R31
000892 9560      	COM  R22
000893 9570      	COM  R23
000894 95e1      	NEG  R30
000895 4fff      	SBCI R31,-1
000896 4f6f      	SBCI R22,-1
000897 4f7f      	SBCI R23,-1
000898 9508      	RET
                 
                 __CBD1:
000899 2ffe      	MOV  R31,R30
00089a 0fff      	ADD  R31,R31
00089b 0bff      	SBC  R31,R31
00089c 2f6f      	MOV  R22,R31
00089d 2f7f      	MOV  R23,R31
00089e 9508      	RET
                 
                 __CWD1:
00089f 2f6f      	MOV  R22,R31
0008a0 0f66      	ADD  R22,R22
0008a1 0b66      	SBC  R22,R22
0008a2 2f76      	MOV  R23,R22
0008a3 9508      	RET
                 
                 __DIVB21U:
0008a4 2400      	CLR  R0
0008a5 e098      	LDI  R25,8
                 __DIVB21U1:
0008a6 0faa      	LSL  R26
0008a7 1c00      	ROL  R0
0008a8 1a0e      	SUB  R0,R30
0008a9 f410      	BRCC __DIVB21U2
0008aa 0e0e      	ADD  R0,R30
0008ab c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0008ac 60a1      	SBR  R26,1
                 __DIVB21U3:
0008ad 959a      	DEC  R25
0008ae f7b9      	BRNE __DIVB21U1
0008af 2fea      	MOV  R30,R26
0008b0 2da0      	MOV  R26,R0
0008b1 9508      	RET
                 
                 __DIVB21:
0008b2 d039      	RCALL __CHKSIGNB
0008b3 dff0      	RCALL __DIVB21U
0008b4 f40e      	BRTC __DIVB211
0008b5 95e1      	NEG  R30
                 __DIVB211:
0008b6 9508      	RET
                 
                 __DIVD21U:
0008b7 933f      	PUSH R19
0008b8 934f      	PUSH R20
0008b9 935f      	PUSH R21
0008ba 2400      	CLR  R0
0008bb 2411      	CLR  R1
0008bc 2744      	CLR  R20
0008bd 2755      	CLR  R21
0008be e230      	LDI  R19,32
                 __DIVD21U1:
0008bf 0faa      	LSL  R26
0008c0 1fbb      	ROL  R27
0008c1 1f88      	ROL  R24
0008c2 1f99      	ROL  R25
0008c3 1c00      	ROL  R0
0008c4 1c11      	ROL  R1
0008c5 1f44      	ROL  R20
0008c6 1f55      	ROL  R21
0008c7 1a0e      	SUB  R0,R30
0008c8 0a1f      	SBC  R1,R31
0008c9 0b46      	SBC  R20,R22
0008ca 0b57      	SBC  R21,R23
0008cb f428      	BRCC __DIVD21U2
0008cc 0e0e      	ADD  R0,R30
0008cd 1e1f      	ADC  R1,R31
0008ce 1f46      	ADC  R20,R22
0008cf 1f57      	ADC  R21,R23
0008d0 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0008d1 60a1      	SBR  R26,1
                 __DIVD21U3:
0008d2 953a      	DEC  R19
0008d3 f759      	BRNE __DIVD21U1
0008d4 01fd      	MOVW R30,R26
0008d5 01bc      	MOVW R22,R24
0008d6 01d0      	MOVW R26,R0
0008d7 01ca      	MOVW R24,R20
0008d8 915f      	POP  R21
0008d9 914f      	POP  R20
0008da 913f      	POP  R19
0008db 9508      	RET
                 
                 __MODB21:
0008dc 94e8      	CLT
0008dd ffa7      	SBRS R26,7
0008de c002      	RJMP __MODB211
0008df 95a1      	NEG  R26
0008e0 9468      	SET
                 __MODB211:
0008e1 fde7      	SBRC R30,7
0008e2 95e1      	NEG  R30
0008e3 dfc0      	RCALL __DIVB21U
0008e4 2fea      	MOV  R30,R26
0008e5 f40e      	BRTC __MODB212
0008e6 95e1      	NEG  R30
                 __MODB212:
0008e7 9508      	RET
                 
                 __MODD21U:
0008e8 dfce      	RCALL __DIVD21U
0008e9 01fd      	MOVW R30,R26
0008ea 01bc      	MOVW R22,R24
0008eb 9508      	RET
                 
                 __CHKSIGNB:
0008ec 94e8      	CLT
0008ed ffe7      	SBRS R30,7
0008ee c002      	RJMP __CHKSB1
0008ef 95e1      	NEG  R30
0008f0 9468      	SET
                 __CHKSB1:
0008f1 ffa7      	SBRS R26,7
0008f2 c004      	RJMP __CHKSB2
0008f3 95a1      	NEG  R26
0008f4 f800      	BLD  R0,0
0008f5 9403      	INC  R0
0008f6 fa00      	BST  R0,0
                 __CHKSB2:
0008f7 9508      	RET
                 
                 __GETW1P:
0008f8 91ed      	LD   R30,X+
0008f9 91fc      	LD   R31,X
0008fa 9711      	SBIW R26,1
0008fb 9508      	RET
                 
                 __GETD1P:
0008fc 91ed      	LD   R30,X+
0008fd 91fd      	LD   R31,X+
0008fe 916d      	LD   R22,X+
0008ff 917c      	LD   R23,X
000900 9713      	SBIW R26,3
000901 9508      	RET
                 
                 __GETD1S0:
000902 81e8      	LD   R30,Y
000903 81f9      	LDD  R31,Y+1
000904 816a      	LDD  R22,Y+2
000905 817b      	LDD  R23,Y+3
000906 9508      	RET
                 
                 __GETD2S0:
000907 81a8      	LD   R26,Y
000908 81b9      	LDD  R27,Y+1
000909 818a      	LDD  R24,Y+2
00090a 819b      	LDD  R25,Y+3
00090b 9508      	RET
                 
                 __PUTD1S0:
00090c 83e8      	ST   Y,R30
00090d 83f9      	STD  Y+1,R31
00090e 836a      	STD  Y+2,R22
00090f 837b      	STD  Y+3,R23
000910 9508      	RET
                 
                 __PUTPARD1:
000911 937a      	ST   -Y,R23
000912 936a      	ST   -Y,R22
000913 93fa      	ST   -Y,R31
000914 93ea      	ST   -Y,R30
000915 9508      	RET
                 
                 __PUTPARD2:
000916 939a      	ST   -Y,R25
000917 938a      	ST   -Y,R24
000918 93ba      	ST   -Y,R27
000919 93aa      	ST   -Y,R26
00091a 9508      	RET
                 
                 __SWAPD12:
00091b 2e18      	MOV  R1,R24
00091c 2f86      	MOV  R24,R22
00091d 2d61      	MOV  R22,R1
00091e 2e19      	MOV  R1,R25
00091f 2f97      	MOV  R25,R23
000920 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000921 2e1b      	MOV  R1,R27
000922 2fbf      	MOV  R27,R31
000923 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000924 2e1a      	MOV  R1,R26
000925 2fae      	MOV  R26,R30
000926 2de1      	MOV  R30,R1
000927 9508      	RET
                 
                 __CPD10:
000928 9730      	SBIW R30,0
000929 4060      	SBCI R22,0
00092a 4070      	SBCI R23,0
00092b 9508      	RET
                 
                 __SAVELOCR6:
00092c 935a      	ST   -Y,R21
                 __SAVELOCR5:
00092d 934a      	ST   -Y,R20
                 __SAVELOCR4:
00092e 933a      	ST   -Y,R19
                 __SAVELOCR3:
00092f 932a      	ST   -Y,R18
                 __SAVELOCR2:
000930 931a      	ST   -Y,R17
000931 930a      	ST   -Y,R16
000932 9508      	RET
                 
                 __LOADLOCR6:
000933 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000934 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000935 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000936 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000937 8119      	LDD  R17,Y+1
000938 8108      	LD   R16,Y
000939 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  50 r17:  60 r18:  48 r19:  35 r20:  50 r21:  90 r22: 112 r23:  97 
r24:  75 r25:  61 r26: 211 r27:  95 r28:  30 r29:   1 r30: 376 r31: 144 
x  :  40 y  : 369 z  :  24 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  32 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  47 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  60 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 170 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  49 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  14 cpc   :  18 cpi   :  81 cpse  :   0 dec   :  16 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   4 inc   :   5 jmp   :  24 ld    :  51 ldd   : 191 ldi   : 205 
lds   :   4 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  82 movw  :  50 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :   9 out   :  22 pop   :  22 push  :  22 rcall :  79 ret   :  89 
reti  :   0 rjmp  : 135 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :   7 sbic  :   0 sbis  :   1 sbiw  :  29 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  94 std   :  86 sts   :   6 sub   :   6 subi  :  48 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 80 out of 116 (69.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001274   4654     70   4724   32768  14.4%
[.dseg] 0x000060 0x00028d      0     45     45    2048   2.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 6 warnings
